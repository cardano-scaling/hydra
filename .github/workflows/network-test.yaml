name: "Network fault tolerance"

# TODO: make this a pull_request trigger or so
on:
  push:
    branches:
    - network-testing

jobs:
  network-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: ❄ Prepare nix
      uses: cachix/install-nix-action@V27
      with:
        extra_nix_config: |
          accept-flake-config = true
          log-lines = 1000

    - name: ❄ Cachix cache of nix derivations
      uses: cachix/cachix-action@v15
      with:
        name: cardano-scaling
        authToken: '${{ secrets.CACHIX_CARDANO_SCALING_AUTH_TOKEN }}'

    - name: Docker-based load test
      run: |
        cd demo
        ./prepare-devnet.sh
        docker compose up -d cardano-node
        ./seed-devnet.sh
        docker compose up -d hydra-node-{1,2,3}
        sleep 10
        docker ps

        ls -lah devnet/node.socket

        # TODO: make this a flake output / easier accesible
        nix run .#legacyPackages.x86_64-linux.hydra-cluster.components.benchmarks.bench-e2e -- \
          demo \
          --output-directory=$(pwd)/benchmarks \
          --scaling-factor=100 \
          --timeout=1000s \
          --node-socket=devnet/node.socket \
          --hydra-sk=./alice.sk \
          --hydra-sk=./bob.sk \
          --hydra-sk=./carol.sk

          # TODO: this is maybe rather what we want as this can likely re-use much more code underneath
          # datasets datasets/3-nodes.json --timeout 1000s \
          # --node-socket=devnet/node.socket \
          # --hydra-client=localhost:4001 \
          # --hydra-client=localhost:4002 \
          # --hydra-client=localhost:4003
          #

        # TODO: call a fault injection program

    - name: Acquire logs
      if: always()
      run: |
        cd demo
        docker compose logs > docker-logs

    - name: 💾 Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: docker-logs
        path: demo/docker-logs
        if-no-files-found: ignore
