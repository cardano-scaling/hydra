"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[7924],{56475:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"getting-started","title":"Getting started","description":"To get started quickly, we\'ll walk you through the standard demo setup, which includes:","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/head-protocol/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-scaling/hydra/tree/master/docs/docs/getting-started.md","tags":[],"version":"current","frontMatter":{},"sidebar":"userDocumentation","previous":{"title":"Known issues and limitations","permalink":"/head-protocol/docs/known-issues"},"next":{"title":"... without Docker","permalink":"/head-protocol/docs/getting-started-without-docker"}}');var o=t(74848),i=t(28453);const s={},d="Getting started",a={},c=[{value:"Preparation",id:"preparation",level:2},{value:"Set up the devnet",id:"set-up-the-devnet",level:2},{value:"Start Hydra nodes",id:"start-hydra-nodes",level:2},{value:"Use the head",id:"use-the-head",level:2},{value:"Monitoring",id:"monitoring",level:2},{value:"Start the monitoring stack",id:"start-the-monitoring-stack",level:3},{value:"Using Grafana",id:"using-grafana",level:3},{value:"Dashboard Preview",id:"dashboard-preview",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,o.jsx)(n.p,{children:"To get started quickly, we'll walk you through the standard demo setup, which includes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["A cluster of three ",(0,o.jsx)(n.code,{children:"hydra-nodes"}),", each directly connected to the others and configured with one of three Hydra credentials: ",(0,o.jsx)(n.code,{children:"Alice"}),", ",(0,o.jsx)(n.code,{children:"Bob"}),", or ",(0,o.jsx)(n.code,{children:"Carol"})]}),"\n",(0,o.jsxs)(n.li,{children:["A single ",(0,o.jsx)(n.code,{children:"cardano-node"})," producing blocks used as a (very fast) local ",(0,o.jsx)(n.code,{children:"devnet"})]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"hydra-tui"})," example for clients to interact with the individual ",(0,o.jsx)(n.code,{children:"hydra-node"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["This tutorial uses ",(0,o.jsx)(n.a,{href:"https://www.docker.com/get-started",children:"Docker"})," to install the nodes, so ensure Docker is installed. If you want to explore alternative ways of running the tools, see a ",(0,o.jsx)(n.a,{href:"/head-protocol/docs/getting-started-without-docker",children:"variant of this tutorial"})," or the ",(0,o.jsx)(n.a,{href:"/head-protocol/docs/tutorial/",children:"testnet tutorial"}),", which uses pre-built binaries. The documentation pages on ",(0,o.jsx)(n.a,{href:"./installation",children:"installation"})," and ",(0,o.jsx)(n.a,{href:"./configuration",children:"configuration"})," provide more details."]}),"\n",(0,o.jsxs)(n.p,{children:["Additionally, the ",(0,o.jsx)(n.code,{children:"hydra-tui"})," uses the HTTP/WebSocket API provided by the ",(0,o.jsx)(n.code,{children:"hydra-node"})," behind the scenes. The ",(0,o.jsx)(n.a,{href:"/head-protocol/docs/tutorial/",children:"testnet tutorial"})," will show how to use this API using low-level commands, or you can see the ",(0,o.jsx)(n.a,{href:"https://hydra.family/head-protocol/unstable/api-reference",children:"API reference"})," for more details."]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Video demonstration (a bit dated)"}),(0,o.jsx)("iframe",{style:{width:"100%",height:"480px"},src:"https://www.youtube.com/embed/dJk5_kB3BM4",title:"Hydra Head Demo",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"})]}),"\n",(0,o.jsx)(n.admonition,{title:"OS Compatibility",type:"caution",children:(0,o.jsxs)(n.p,{children:["These instructions have been tested only on Linux environments (Ubuntu, NixOS). If you're on Windows or Mac OS X, you might need to adapt to use ",(0,o.jsx)(n.a,{href:"https://docs.docker.com/storage/volumes/",children:"Volumes"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"preparation",children:"Preparation"}),"\n",(0,o.jsxs)(n.p,{children:["All commands below are written as if executed from the ",(0,o.jsx)(n.code,{children:"demo"})," folder in the project repository. Ensure you clone the repository, switch into the ",(0,o.jsx)(n.code,{children:"demo"})," folder, and pull the latest Docker images:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"git clone git@github.com:cardano-scaling/hydra.git\ncd hydra/demo\ndocker compose pull\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Shortcut",type:"info",children:(0,o.jsxs)(n.p,{children:["For convenience, we provide a script ",(0,o.jsx)(n.code,{children:"./run-docker.sh"}),", which combines all the following steps. It also performs a few sanity checks to prevent potential issues."]})}),"\n",(0,o.jsx)(n.h2,{id:"set-up-the-devnet",children:"Set up the devnet"}),"\n",(0,o.jsxs)(n.p,{children:["Next, prepare the devnet configuration to bootstrap a local Cardano blockchain.\n",(0,o.jsx)(n.strong,{children:"Note"})," that we use a simplified variant of Cardano that does not require any stake pools."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"./prepare-devnet.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:"Bring the Cardano node up with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"docker compose up -d cardano-node\n"})}),"\n",(0,o.jsx)(n.p,{children:"Verify that the devnet is up-and-running by checking the logs with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"docker compose logs cardano-node -f\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You should see traces containing ",(0,o.jsx)(n.code,{children:"TraceAdoptedBlock"}),", which means that the devnet is producing blocks .. nice!"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Do not wait too long between these two commands. If you get ",(0,o.jsx)(n.code,{children:"TraceNoLedgerView"})," errors from the Cardano node, the genesis start time is too far in the past, and you need to update them by running ",(0,o.jsx)(n.code,{children:"prepare-devnet.sh"})," again."]})}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsxs)(n.p,{children:["You can use ",(0,o.jsx)(n.a,{href:"https://jqlang.github.io/jq/",children:"jq"})," to follow the logs and see the node update kinds with the\nfollowing command:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker compose logs -f --no-log-prefix cardano-node | jq -Rr 'fromjson? | .data.kind'\n"})})]}),"\n",(0,o.jsxs)(n.p,{children:["Next, we need to give Alice, Bob, and Carol some UTXOs for committing and ada for paying fees. To do this, use the ",(0,o.jsx)(n.code,{children:"seed-devnet.sh"})," script, which uses the ",(0,o.jsx)(n.code,{children:"cardano-cli"})," within the already running ",(0,o.jsx)(n.code,{children:"cardano-node"})," container:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"./seed-devnet.sh\n"})}),"\n",(0,o.jsx)(n.h2,{id:"start-hydra-nodes",children:"Start Hydra nodes"}),"\n",(0,o.jsx)(n.p,{children:"Finally, now that the on-chain preparations are done, we can bring the Hydra network (all three nodes for Alice, Bob, and Carol) up by running:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"docker compose up -d hydra-node-{1,2,3}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Using ",(0,o.jsx)(n.code,{children:"compose"}),", you can start the demo Terminal-based User Interface (",(0,o.jsx)(n.code,{children:"hydra-tui"}),") to interact with Hydra nodes. There are three preconfigured TUI services in the ",(0,o.jsx)(n.code,{children:"compose"})," definition: ",(0,o.jsx)(n.code,{children:"hydra-tui-1"}),", ",(0,o.jsx)(n.code,{children:"hydra-tui-2"}),", and ",(0,o.jsx)(n.code,{children:"hydra-tui-3"}),". To connect to the first Hydra node in a terminal, run the following command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"docker compose run hydra-tui-1\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This will start a full-blown terminal interface loaded with signing keys corresponding to the first Hydra node. In other terminals, you can start other nodes in a similar fashion targeting ",(0,o.jsx)(n.code,{children:"hydra-tui-2"})," and ",(0,o.jsx)(n.code,{children:"hydra-tui-3"})," services."]}),"\n",(0,o.jsx)(n.h2,{id:"use-the-head",children:"Use the head"}),"\n",(0,o.jsxs)(n.p,{children:["Using the terminal interface of any node, you can now ",(0,o.jsx)(n.code,{children:"[i]nit"})," the Hydra head and ",(0,o.jsx)(n.code,{children:"[c]ommit"})," pre-distributed funds to it. Note that these steps are near-instant as the devnet is producing blocks much faster than a public testnet or the mainnet. After committing from all nodes, the head will automatically open, and you can also use the ",(0,o.jsx)(n.code,{children:"hydra-tui"})," or the API to create new transactions and submit them to the Hydra head."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:t(41300).A+"",width:"1869",height:"487"})}),"\n",(0,o.jsx)(n.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,o.jsx)(n.p,{children:"We provide a minimal monitoring setup using Prometheus and Grafana to give you insight into the node's activity, including snapshot processing and peer connectivity."}),"\n",(0,o.jsx)(n.admonition,{title:"Note",type:"info",children:(0,o.jsx)(n.p,{children:"This setup focuses solely on the metrics exposed by the Hydra nodes and does not cover system-level metrics like CPU, memory, disk, or network usage."})}),"\n",(0,o.jsxs)(n.p,{children:["Hydra nodes expose ",(0,o.jsx)(n.a,{href:"https://prometheus.io/",children:"Prometheus"}),"-compliant ",(0,o.jsx)(n.em,{children:"metrics"})," through an HTTP server, available on the standard ",(0,o.jsx)(n.code,{children:"/metrics"})," endpoint."]}),"\n",(0,o.jsx)(n.admonition,{title:"Shortcut",type:"info",children:(0,o.jsxs)(n.p,{children:["Reference the ",(0,o.jsx)(n.a,{href:"/head-protocol/docs/how-to/operating-hydra#monitoring",children:"Operating Hydra nodes guide"})," for a more in-depth explanation on available metrics."]})}),"\n",(0,o.jsx)(n.h3,{id:"start-the-monitoring-stack",children:"Start the monitoring stack"}),"\n",(0,o.jsx)(n.p,{children:"Bring up Prometheus and Grafana:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"docker compose up -d prometheus grafana\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Prometheus will scrape the ",(0,o.jsx)(n.code,{children:"/metrics"})," endpoint of each Hydra node automatically."]}),"\n",(0,o.jsx)(n.p,{children:"Grafana is preconfigured with a minimal dashboard visualizing key metrics from each node:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Panel"}),(0,o.jsx)(n.th,{children:"Metric"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Hydra Head Confirmed Tx"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"hydra_head_confirmed_tx"})}),(0,o.jsx)(n.td,{children:"Number of snapshots confirmed by the Hydra head"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Hydra Head Inputs"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"hydra_head_inputs"})}),(0,o.jsx)(n.td,{children:"Number of inputs processed by the head"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Hydra Head Tx Confirmation Time (ms)"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"hydra_head_tx_confirmation_time_ms"})}),(0,o.jsx)(n.td,{children:"Average time taken to confirm snapshots on the Hydra head (from request to confirmation)"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Peer Connected"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"hydra_head_peers_connected"})}),(0,o.jsx)(n.td,{children:"Number of peers each node is currently connected to"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Hydra Head Requested"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"hydra_head_requested_tx"})}),(0,o.jsx)(n.td,{children:"Number of requested transactions received by the node (incoming ReqTx messages)"})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"using-grafana",children:"Using Grafana"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Open Grafana in your browser at ",(0,o.jsx)(n.code,{children:"http://localhost:3000"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Default login credentials are ",(0,o.jsx)(n.code,{children:"admin/admin"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"Explore the preconfigured dashboard or create your own panels using Prometheus queries."}),"\n",(0,o.jsxs)(n.li,{children:["Use the top-left ",(0,o.jsx)(n.code,{children:"instance"})," dropdown to inspect metrics per Hydra node."]}),"\n",(0,o.jsx)(n.li,{children:"Hover on any graph or stat panel to see per-node values in real time."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"dashboard-preview",children:"Dashboard Preview"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:t(52181).A+"",width:"3012",height:"1494"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},52181:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/monitoring-0a256dd61f304c4d4a1b8b852cdce41e.png"},41300:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/open-head-112e4af7cb464a179c7514412a8a9e38.png"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var r=t(96540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);