"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[4134],{14964:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"how-to/incremental-decommit","title":"Decommit funds","description":"To take out some UTXO present in an open head and send it back to layer 1, you need to do a so-called decommit.","source":"@site/docs/how-to/incremental-decommit.md","sourceDirName":"how-to","slug":"/how-to/incremental-decommit","permalink":"/head-protocol/docs/how-to/incremental-decommit","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-scaling/hydra/tree/master/docs/docs/how-to/incremental-decommit.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"userDocumentation","previous":{"title":"Commit funds to an open Head","permalink":"/head-protocol/docs/how-to/incremental-commit"},"next":{"title":"Operate a Hydra node","permalink":"/head-protocol/docs/how-to/operating-hydra"}}');var o=t(74848),a=t(28453);const i={sidebar_position:5},c="Decommit funds",d={},r=[];function l(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"decommit-funds",children:"Decommit funds"})}),"\n",(0,o.jsxs)(n.p,{children:["To take out some ",(0,o.jsx)(n.code,{children:"UTXO"})," present in an open head and send it back to layer 1, you need to do a so-called ",(0,o.jsx)(n.code,{children:"decommit"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["This how-to assumes that we are in a similar situation as in the ",(0,o.jsx)(n.a,{href:"../getting-started",children:"Getting started"})," or ",(0,o.jsx)(n.a,{href:"../tutorial",children:"Testnet tutorial"}),". Depending on who owns something in your head, you might need to update the instructions of this tutorial. In our example, we decommit funds owned by Alice from their address:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"export WALLET_SK=credentials/alice-funds.sk\nexport WALLET_ADDR=addr_test1vp5cxztpc6hep9ds7fjgmle3l225tk8ske3rmwr9adu0m6qchmx5z\n"})}),"\n",(0,o.jsxs)(n.p,{children:["First, we need to find out which ",(0,o.jsx)(n.code,{children:"UTXO"})," we can spend using our address:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'curl localhost:4001/snapshot/utxo \\\n  | jq "with_entries(select(.value.address == \\"${WALLET_ADDR}\\"))" \\\n  > utxo.json\n'})}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:" Example output"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "f6b004be1cf95dbd3d0abc3daceac40ef6401e502972a919e5e52564b9f5740b#0": {\n    "address": "addr_test1vp5cxztpc6hep9ds7fjgmle3l225tk8ske3rmwr9adu0m6qchmx5z",\n    "datum": null,\n    "datumhash": null,\n    "inlineDatum": null,\n    "referenceScript": null,\n    "value": {\n      "lovelace": 50000000\n    }\n  },\n  "f6b004be1cf95dbd3d0abc3daceac40ef6401e502972a919e5e52564b9f5740b#1": {\n    "address": "addr_test1vp5cxztpc6hep9ds7fjgmle3l225tk8ske3rmwr9adu0m6qchmx5z",\n    "datum": null,\n    "datumhash": null,\n    "inlineDatum": null,\n    "referenceScript": null,\n    "value": {\n      "lovelace": 50000000\n    }\n  }\n}\n'})})]}),"\n",(0,o.jsxs)(n.p,{children:["Now, the ",(0,o.jsx)(n.code,{children:"decommit"})," command requires us to build a transaction that proves we can spend what we want to decommit. The outputs of this transaction will be the outputs that are also going to be made available on the main chain."]}),"\n",(0,o.jsx)(n.p,{children:"For example, to spend the first UTXO queried above in a transaction sending the same value to Alice's key (so she can spend it on layer 1 later):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"LOVELACE=$(jq -r 'to_entries[0].value.value.lovelace' < utxo.json)\ncardano-cli transaction build-raw \\\n  --tx-in $(jq -r 'to_entries[0].key' < utxo.json) \\\n  --tx-out ${WALLET_ADDR}+${LOVELACE} \\\n  --fee 0 \\\n  --out-file decommit.json\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can inspect the transaction with"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"cardano-cli transaction view --tx-file decommit.json\n"})}),"\n",(0,o.jsx)(n.p,{children:"As the transaction spends from Alice's funds in the Hydra head, we also need to\nsign it with her key:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"cardano-cli transaction sign \\\n  --tx-file decommit.json \\\n  --signing-key-file ${WALLET_SK} \\\n  --out-file alice-decommit-tx-signed.json\n"})}),"\n",(0,o.jsxs)(n.p,{children:["With the signed decommit transaction, we can submit it to the ",(0,o.jsx)(n.code,{children:"/decommit"})," endpoint:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"curl -X POST 127.0.0.1:4001/decommit \\\n  --data @alice-decommit-tx-signed.json\n"})}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Alternative using websocket"}),(0,o.jsxs)(n.p,{children:["We can also submit a ",(0,o.jsx)(n.code,{children:"Decommit"})," client input using a WebSocket:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'cat alice-decommit-tx-signed.json \\\n  | jq -c \'{tag: "Decommit", decommitTx: .}\' \\\n  | websocat "ws://127.0.0.1:4001?history=no"\n'})})]}),"\n",(0,o.jsxs)(n.p,{children:["If you haven't already, open a WebSocket session using ",(0,o.jsx)(n.code,{children:"websocat ws://0.0.0.0:4001"})," now."]}),"\n",(0,o.jsxs)(n.p,{children:["In the message history, you will see a ",(0,o.jsx)(n.code,{children:"DecommitRequested"})," message which\nindicates a decommit is requested."]}),"\n",(0,o.jsxs)(n.p,{children:["After some time, a ",(0,o.jsx)(n.code,{children:"DecommitFinalized"})," can be observed, which concludes the decommit process and makes the funds available on layer 1."]}),"\n",(0,o.jsxs)(n.p,{children:["To confirm, you can query the funds of the wallet on layer 1 from a ",(0,o.jsx)(n.code,{children:"cardano-node"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"cardano-cli query utxo \\\n  --address ${WALLET_ADDR} \\\n  --output-json | jq\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(96540);const o={},a=s.createContext(o);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);