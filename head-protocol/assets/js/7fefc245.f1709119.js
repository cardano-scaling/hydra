"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[3955],{63752:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>l});const d=JSON.parse('{"id":"how-to/incremental-commit","title":"Commit funds to an open Head","description":"Assuming we already have an open Head and some funds on the L1 we would like to commit.","source":"@site/docs/how-to/incremental-commit.md","sourceDirName":"how-to","slug":"/how-to/incremental-commit","permalink":"/head-protocol/docs/how-to/incremental-commit","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-scaling/hydra/tree/master/docs/docs/how-to/incremental-commit.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"userDocumentation","previous":{"title":"Use withdraw zero trick","permalink":"/head-protocol/docs/how-to/withdraw-zero"},"next":{"title":"Decommit funds","permalink":"/head-protocol/docs/how-to/incremental-decommit"}}');var t=a(74848),c=a(28453);const o={sidebar_position:5},s="Commit funds to an open Head",i={},l=[{value:"Deposit UTxO to commit",id:"deposit-utxo-to-commit",level:3},{value:"Recover a deposit",id:"recover-a-deposit",level:3}];function r(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"commit-funds-to-an-open-head",children:"Commit funds to an open Head"})}),"\n",(0,t.jsx)(n.p,{children:"Assuming we already have an open Head and some funds on the L1 we would like to commit."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["You could run a local ",(0,t.jsx)(n.a,{href:"./../getting-started",children:"demo"})]})}),"\n",(0,t.jsxs)(n.p,{children:["The following commands are expected to be run from the ",(0,t.jsx)(n.code,{children:"demo"})," folder and using these environment variables:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"export CARDANO_NODE_SOCKET_PATH=${PWD}/devnet/node.socket\nexport CARDANO_NODE_NETWORK_ID=42\n"})}),"\n",(0,t.jsx)(n.p,{children:"We can inspect the L1 utxo with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cardano-cli query utxo --whole-utxo\n"})}),"\n",(0,t.jsx)(n.p,{children:"and the state of the faucet public key"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cardano-cli query utxo \\\n  --address $(cardano-cli address build --payment-verification-key-file ${PWD}/../hydra-cluster/config/credentials/faucet.vk)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In this setup, we would be using the ",(0,t.jsx)(n.code,{children:"faucet"})," keys to commit everything into the head."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"export WALLET_SK=${PWD}/../hydra-cluster/config/credentials/faucet.sk\nexport WALLET_VK=${PWD}/../hydra-cluster/config/credentials/faucet.vk\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deposit-utxo-to-commit",children:"Deposit UTxO to commit"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/commit"})," endpoint supports two ways of specifying what to commit, one is just by showing the UTxO (which is assumed to be owned by public keys), while the more advanced way would be using ",(0,t.jsx)(n.a,{href:"./commit-blueprint",children:"blueprint transactions"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["We are using the simple request here and want to commit everything owned by ",(0,t.jsx)(n.code,{children:"${WALLET_SK}"}),". So we can just query the L1 for all UTxO owned by it:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cardano-cli query utxo \\\n  --address $(cardano-cli address build --payment-verification-key-file ${WALLET_VK}) \\\n  --out-file commit-utxo.json\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["You can also specify ",(0,t.jsx)(n.code,{children:"amount"})," of lovelace you want to commit as well as ",(0,t.jsx)(n.code,{children:"assets"})," together with the ",(0,t.jsx)(n.code,{children:"UTxO"})," and hydra-node would\ncommit only the specified amount of lovelace or any potential non ADA assets and return any leftover to the user address."]})}),"\n",(0,t.jsx)(n.admonition,{type:"danger",children:(0,t.jsxs)(n.p,{children:["This functionality should be treated as ",(0,t.jsx)(n.strong,{children:"experimental"})," for the time being until we see some user reports that this API is\nworking well and is easy to use."]})}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"Partial commit example: "}),(0,t.jsx)(n.p,{children:"If there exists a user UTxO that looks like this"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{"0bdf069df8fa1084989a7bda419c900810fd5d5a72a95f7ab487f96df9052fb8#0":\n  { "address":"addr_test1vq7j5vf74jw779y6ssxk2rwart5mltr2r7ju4gtfc3kcawcy0v2v8",\n    "datum":null,\n    "datumhash":null,\n    "inlineDatum":null,\n    "inlineDatumRaw":null,\n    "referenceScript":null,\n    "value":\n       { "dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75":\n           { "34":2007797983096461947,\n             "7041ef64f4476c6f6d8a3c74b7":4866145859671050979,\n             "b7a7b64d585f973e82be6ca36ae948":2,\n             "beb7e61cb67dd301":2\n           },\n         "lovelace":5000000\n       }\n  }\n}\n\n'})}),(0,t.jsxs)(n.p,{children:["Then the user can decide to commit some amount of lovelace and assets while the ",(0,t.jsx)(n.em,{children:"change"})," would be given back to the origin address.\nIn order to do that they can send a http POST request to the ",(0,t.jsx)(n.code,{children:"/commit"})," endpoint\nspecifying the ",(0,t.jsx)(n.em,{children:"amount"})," of ADA and map of ",(0,t.jsx)(n.em,{children:"tokens"})," with quantities to commit:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'\n{\n  "amount":3000000,\n  "tokens":\n     [\n       [ "dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75",\n            { "34":2007797983096461947,\n              "7041ef64f4476c6f6d8a3c74b7":4866145859671050979\n            }\n       ]\n     ],\n  "utxoToCommit":\n     { "0bdf069df8fa1084989a7bda419c900810fd5d5a72a95f7ab487f96df9052fb8#0":\n          { "address":"addr_test1vq7j5vf74jw779y6ssxk2rwart5mltr2r7ju4gtfc3kcawcy0v2v8",\n            "datum":null,\n            "datumhash":null,\n            "inlineDatum":null,\n            "inlineDatumRaw":null,\n            "referenceScript":null,\n            "value":\n                { "dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75":\n                     { "34":2007797983096461947,\n                       "7041ef64f4476c6f6d8a3c74b7":4866145859671050979,\n                       "b7a7b64d585f973e82be6ca36ae948":2,\n                       "beb7e61cb67dd301":2\n                     },\n                  "lovelace":5000000\n                }\n          }\n     }\n}\n\n'})}),(0,t.jsx)(n.p,{children:"Hydra node returns a deposit transaction which then needs to be signed and submitted to the network:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'\n"d22e92621c1b66d947eff97887feb19c1fb5751ecb7440cd6749ac8d734af04f"\n\n== INPUTS (2)\n- 0bdf069df8fa1084989a7bda419c900810fd5d5a72a95f7ab487f96df9052fb8#0\n      ShelleyAddress Testnet (KeyHashObj (KeyHash {unKeyHash = "3d2a313eac9def149a840d650ddd1ae9bfac6a1fa5caa169c46d8ebb"})) StakeRefNull\n      5000000 lovelace\n      2007797983096461947 dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75.34\n      4866145859671050979 dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75.7041ef64f4476c6f6d8a3c74b7\n      2 dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75.b7a7b64d585f973e82be6ca36ae948\n      2 dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75.beb7e61cb67dd301\n      TxOutDatumNone\n      ReferenceScriptNone\n- 799028d0132ec355d6870704e040b73dbab67dba40313cb4f5dbc42d0e66bd40#1\n\n== COLLATERAL INPUTS (1)\n- 799028d0132ec355d6870704e040b73dbab67dba40313cb4f5dbc42d0e66bd40#1\n\n== REFERENCE INPUTS (0)\n\n== OUTPUTS (3)\nTotal number of assets: 5\n- ShelleyAddress Testnet (ScriptHashObj (ScriptHash "ae01dade3a9c346d5c93ae3ce339412b90a0b8f83f94ec6baa24e30c")) StakeRefNull\n      3000000 lovelace\n      2007797983096461947 dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75.34\n      4866145859671050979 dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75.7041ef64f4476c6f6d8a3c74b7\n      TxOutDatumInline [0,["0x3fbb97e02ed6f34def7b87d9aaff67b4fe707f338d72bc2a7f93a409",1757516160812,[[0,[[0,["0x0bdf069df8fa1084989a7bda419c900810fd5d5a72a95f7ab487f96df9052fb8",0]],"0xd8799fd8799fd8799f581c3d2a313eac9def149a840d650ddd1ae9bfac6a1fa5caa169c46d8ebbffd87a80ffa240a1401a002dc6c0581cdcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75a241341b1bdd21a0bb35da7b4d7041ef64f4476c6f6d8a3c74b71b438805e09eee4ae3d87980d87a80ff"]]]]]\n- ShelleyAddress Testnet (KeyHashObj (KeyHash {unKeyHash = "3d2a313eac9def149a840d650ddd1ae9bfac6a1fa5caa169c46d8ebb"})) StakeRefNull\n      2000000 lovelace\n      2 dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75.b7a7b64d585f973e82be6ca36ae948\n      2 dcf5fdd1d01c04b0e6262bba173a89c4b81b6570211f08bc059c8a75.beb7e61cb67dd301\n      TxOutDatumNone\n- ShelleyAddress Testnet (KeyHashObj (KeyHash {unKeyHash = "f8a68cd18e59a6ace848155a0e967af64f4d00cf8acee8adc95a6b0d"})) StakeRefNull\n      19625359 lovelace\n      TxOutDatumNone\n\n== TOTAL COLLATERAL\nTxTotalCollateralNone\n\n== RETURN COLLATERAL\nTxReturnCollateralNone\n\n== FEE\nTxFeeExplicit ShelleyBasedEraConway (Coin 197973)\n\n== VALIDITY\nTxValidityNoLowerBound\nTxValidityUpperBound ShelleyBasedEraConway (Just (SlotNo 38))\n\n== MINT/BURN\n0 lovelace\n\n== SCRIPTS (0)\nTotal size (bytes):  0\n\n== DATUMS (0)\n\n== REDEEMERS (0)\n\n== REQUIRED SIGNERS\n[]\n\n== METADATA\nTxMetadataInEra ShelleyBasedEraConway (TxMetadata {unTxMetadata = fromList [(55555,TxMetaText "HydraV1/DepositTx")]})\n'})}),(0,t.jsx)(n.p,{children:"If you take a look at the outputs you will see that we only locked specified ADA amount + tokens at the deposit address and gave back any leftover to the\nuser address."})]}),"\n",(0,t.jsxs)(n.p,{children:["Then a request to the ",(0,t.jsx)(n.code,{children:"/commit"})," endpoint provides us with a transaction:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"curl -X POST localhost:4001/commit \\\n  --data @commit-utxo.json \\\n  > deposit-tx.json\n"})}),"\n",(0,t.jsx)(n.p,{children:"Which we can submit to the cardano network:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cardano-cli conway transaction sign \\\n  --tx-file deposit-tx.json \\\n  --signing-key-file ${WALLET_SK} \\\n  --out-file deposit-tx.signed.json\n\ncardano-cli conway transaction submit \\\n  --tx-file deposit-tx.signed.json\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This will result in a deposit being detected by the ",(0,t.jsx)(n.code,{children:"hydra-node"})," and consequently the funds to be committed to the head."]}),"\n",(0,t.jsx)(n.h3,{id:"recover-a-deposit",children:"Recover a deposit"}),"\n",(0,t.jsxs)(n.p,{children:["Do the same thing as above, ",(0,t.jsx)(n.strong,{children:"but"})," with one node stopped, so the deposit is not going to be picked up."]}),"\n",(0,t.jsx)(n.p,{children:"Once we deposited funds we should not see the corresponding UTxO belonging to faucet public key on L1:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"\ncardano-cli query utxo \\\n  --address $(cardano-cli address build --payment-verification-key-file ${PWD}/../hydra-cluster/config/credentials/faucet.vk)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Inspect the pending deposits:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"curl -X GET localhost:4001/commits\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["and you should see the tx-id of the deposit transaction ",(0,t.jsx)(n.code,{children:'["6b51f3787f5482004b258c60fe0c94775164f547d9284b6233bbb4f6f8b9dfa6"]'})]}),"\n",(0,t.jsxs)(n.p,{children:["To recover, we can use the ",(0,t.jsx)(n.code,{children:"/commits"})," endpoint again using the transaction id of the deposit:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'curl -X DELETE localhost:4001/commits/$(printf "\\"6b51f3787f5482004b258c60fe0c94775164f547d9284b6233bbb4f6f8b9dfa6"\\" | jq -sRr \'@uri\')\n'})}),"\n",(0,t.jsx)(n.p,{children:"If we inspect the faucet funds again we will see that the locked deposit is now recovered"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cardano-cli query utxo \\\n  --address $(cardano-cli address build --payment-verification-key-file ${PWD}/../hydra-cluster/config/credentials/faucet.vk)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var d=a(96540);const t={},c=d.createContext(t);function o(e){const n=d.useContext(c);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),d.createElement(c.Provider,{value:n},e.children)}}}]);