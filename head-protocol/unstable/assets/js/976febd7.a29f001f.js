"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[1749],{33718:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>o});var a=t(27145),i=t(74848),s=t(28453);const d={slug:18,title:"18. Single state in Hydra.Node.\n",authors:[],tags:["Superseded"]},c=void 0,r={authorsImageUrls:[]},o=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2},{value:"Alternative",id:"alternative",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,i.jsxs)(n.p,{children:["Superseded by ",(0,i.jsx)(n.a,{href:"/adr/23",children:"ADR 23"})," and ",(0,i.jsx)(n.a,{href:"/adr/26",children:"ADR 26"})]}),"\n",(0,i.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Currently the ",(0,i.jsx)(n.code,{children:"hydra-node"})," maintains two pieces of state during the life-cycle of a Hydra Head:","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.code,{children:"HeadState tx"})," provided by the ",(0,i.jsx)(n.code,{children:"HydraHead tx m"})," handle interface and part of the ",(0,i.jsx)(n.code,{children:"Hydra.Node"})," module. It provides the basis for the main ",(0,i.jsx)(n.code,{children:"hydra-node"})," business logic in ",(0,i.jsx)(n.code,{children:"Hydra.Node.processNextEvent"})," and ",(0,i.jsx)(n.code,{children:"Hydra.HeadLogic.update"}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/blob/a98e2907c4e425de2736782793383aad63132c14/hydra-node/src/Hydra/Node.hs#L256-L257",children:"Creation"}),", ",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/blob/a98e2907c4e425de2736782793383aad63132c14/hydra-node/src/Hydra/Node.hs#L174",children:"Usage"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SomeOnChainHeadState"})," is kept in the ",(0,i.jsx)(n.code,{children:"Hydra.Chain.Direct"})," to keep track of the latest known head state, including notable transaction outputs and information how to spend it (e.g. scripts and datums)\n",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/blob/a98e2907c4e425de2736782793383aad63132c14/hydra-node/src/Hydra/Chain/Direct.hs#L156-L162",children:"Code"}),", ",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/blob/a98e2907c4e425de2736782793383aad63132c14/hydra-node/src/Hydra/Chain/Direct.hs#L449",children:"Usage 1"}),", ",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/blob/a98e2907c4e425de2736782793383aad63132c14/hydra-node/src/Hydra/Chain/Direct.hs#L414",children:"Usage 2"}),", ",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/blob/a98e2907c4e425de2736782793383aad63132c14/hydra-node/src/Hydra/Chain/Direct.hs#L349-L352",children:"Usage 3"}),"\n(There are other unrelated things kept in memory like the event history in the API server or a peer map in the network heartbeat component.)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["The interface between the ",(0,i.jsx)(n.code,{children:"Hydra.Node"})," and a ",(0,i.jsx)(n.code,{children:"Hydra.Chain"})," component consists of","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["constructing certain Head protocol transactions given a description of it (",(0,i.jsx)(n.code,{children:"PostChainTx tx"}),"):","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hs",children:"postTx :: MonadThrow m => PostChainTx tx -> m ()\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["a callback function when the ",(0,i.jsx)(n.code,{children:"Hydra.Chain"})," component observed a new Head protocol transaction described by ",(0,i.jsx)(n.code,{children:"OnChainTx tx"}),":","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hs",children:"type ChainCallback tx m = OnChainTx tx -> m ()\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Given by the usage sites above, the ",(0,i.jsx)(n.code,{children:"Hydra.Chain.Direct"})," module requires additional info to do both, construct protocol transactions with ",(0,i.jsx)(n.code,{children:"postTx"})," as well as observe potential ",(0,i.jsx)(n.code,{children:"OnChainTx"})," (",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/blob/a98e2907c4e425de2736782793383aad63132c14/hydra-node/src/Hydra/Chain/Direct.hs#L333-L336",children:"here"}),"). Hence we see that, operation of the ",(0,i.jsx)(n.code,{children:"Hydra.Chain.Direct"})," component (and likely any implementing the interface fully) is ",(0,i.jsx)(n.strong,{children:"inherently stateful"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["We are looking at upcoming features to ",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/issues/185",children:"handle rollbacks"})," and dealing with ",(0,i.jsx)(n.a,{href:"https://github.com/cardano-scaling/hydra/issues/187",children:"persisting the head state"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Both could benefit from the idea, that the ",(0,i.jsx)(n.code,{children:"HeadState"})," is just a result of pure ",(0,i.jsx)(n.code,{children:"Event"})," processing (a.k.a event sourcing)."]}),"\n",(0,i.jsxs)(n.li,{children:["Right now the ",(0,i.jsx)(n.code,{children:"HeadState"})," kept in ",(0,i.jsx)(n.code,{children:"Hydra.Node"})," alone, is not enough to fully describe the state of the ",(0,i.jsx)(n.code,{children:"hydra-node"}),". Hence it would not be enough to just persist all the ",(0,i.jsx)(n.code,{children:"Event"}),"s and replaying them to achieve persistence, nor resetting to some previous ",(0,i.jsx)(n.code,{children:"HeadState"})," in the presence of a rollback."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"decision",children:"Decision"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['We define and keep a "blackbox" ',(0,i.jsx)(n.code,{children:"ChainStateType tx"})," in the ",(0,i.jsx)(n.code,{children:"HeadState tx"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["It shall not be introspectable to the business logic in ",(0,i.jsx)(n.code,{children:"HeadLogic"})]}),"\n",(0,i.jsx)(n.li,{children:"It shall contain chain-specific information about the current Hydra Head, which will naturally need to evolve once we have multiple Heads in our feature scope"}),"\n",(0,i.jsx)(n.li,{children:"For example:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hs",children:"data HeadState tx\n  = IdleState\n  | InitialState\n      { chainState :: ChainStateType tx\n      -- ...\n      }\n  | OpenState\n      { chainState :: ChainStateType tx\n      -- ...\n      }\n  | ClosedState\n      { chainState :: ChainStateType tx\n      -- ...\n      }\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["We provide the latest ",(0,i.jsx)(n.code,{children:"ChainStateType tx"})," to ",(0,i.jsx)(n.code,{children:"postTx"}),":","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hs",children:"postTx :: ChainStateType tx -> PostChainTx tx -> m ()\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["We change the ",(0,i.jsx)(n.code,{children:"ChainEvent tx"})," data type and callback interface of ",(0,i.jsx)(n.code,{children:"Chain"})," to:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hs",children:"data ChainEvent tx\n  = Observation\n      { observedTx :: OnChainTx tx\n      , newChainState :: ChainStateType tx\n      }\n  | Rollback ChainSlot\n  | Tick UTCTime\n\ntype ChainCallback tx m = (ChainStateType tx -> Maybe (ChainEvent tx)) -> m ()\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["with the meaning, that invocation of the callback indicates receival of a transaction which is ",(0,i.jsx)(n.code,{children:"Maybe"})," observing a relevant ",(0,i.jsx)(n.code,{children:"ChainEvent tx"}),", where an ",(0,i.jsx)(n.code,{children:"Observation"})," may include a ",(0,i.jsx)(n.code,{children:"newChainState"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["We also decide to extend ",(0,i.jsx)(n.code,{children:"OnChainEffect"})," with a ",(0,i.jsx)(n.code,{children:"ChainState tx"})," to explicitly\nthread the used ",(0,i.jsx)(n.code,{children:"chainState"})," in the ",(0,i.jsx)(n.code,{children:"Hydra.HeadLogic"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"consequences",children:"Consequences"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["We need to change the construction of ",(0,i.jsx)(n.code,{children:"Chain"})," handles and the call sites of ",(0,i.jsx)(n.code,{children:"postTx"})]}),"\n",(0,i.jsxs)(n.li,{children:["We need to extract the state handling (similar to the event queue) out of the ",(0,i.jsx)(n.code,{children:"HydraNode"})," handle and shuffle the main of ",(0,i.jsx)(n.code,{children:"hydra-node"})," a bit to be able to provide the latest ",(0,i.jsx)(n.code,{children:"ChainState"})," to the chain callback as a continuation."]}),"\n",(0,i.jsxs)(n.li,{children:["We need to make the ",(0,i.jsx)(n.code,{children:"ChainState"})," serializable (",(0,i.jsx)(n.code,{children:"ToJSON"}),", ",(0,i.jsx)(n.code,{children:"FromJSON"}),") as it will be part of the ",(0,i.jsx)(n.code,{children:"HeadState"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["We can drop the ",(0,i.jsx)(n.code,{children:"TVar"})," of keeping ",(0,i.jsx)(n.code,{children:"OnChainHeadState"})," in the ",(0,i.jsx)(n.code,{children:"Hydra.Chain.Direct"})," module."]}),"\n",(0,i.jsxs)(n.li,{children:["We need to update ",(0,i.jsx)(n.code,{children:"DirectChainSpec"})," and ",(0,i.jsx)(n.code,{children:"BehaviorSpec"})," test suites to mock/implement the callback & state handling."]}),"\n",(0,i.jsxs)(n.li,{children:["We might be able to simplify the ",(0,i.jsx)(n.code,{children:"ChainState tx"})," to be just a ",(0,i.jsx)(n.code,{children:"UTxOType tx"})," later."]}),"\n",(0,i.jsxs)(n.li,{children:["As ",(0,i.jsx)(n.code,{children:"OnChainEffect"})," and ",(0,i.jsx)(n.code,{children:"Observation"})," values will contain a ",(0,i.jsx)(n.code,{children:"ChainStateType tx"}),", traces will automatically include the full ",(0,i.jsx)(n.code,{children:"ChainState"}),", which might be helpful but also possible big."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"alternative",children:"Alternative"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["We could extend ",(0,i.jsx)(n.code,{children:"PostChainTx"})," (like ",(0,i.jsx)(n.code,{children:"Observation"}),") with ",(0,i.jsx)(n.code,{children:"ChainState"})," and keep the signatures:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hs",children:"postTx :: MonadThrow m => PostChainTx tx -> m ()\ntype ChainCallback tx m = (ChainState tx -> Maybe (ChainEvent tx) -> m ()\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Not implemented as it is less clear on the need for a ",(0,i.jsx)(n.code,{children:"ChainState"})," in the signatures."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>c});var a=t(96540);const i={},s=a.createContext(i);function d(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),a.createElement(s.Provider,{value:n},e.children)}},27145:e=>{e.exports=JSON.parse('{"permalink":"/head-protocol/unstable/adr/18","source":"@site/adr/2022-04-13_018-single-state.md","title":"18. Single state in Hydra.Node.\\n","description":"Status","date":"2022-04-13T00:00:00.000Z","tags":[{"inline":true,"label":"Superseded","permalink":"/head-protocol/unstable/adr/tags/superseded"}],"readingTime":3.735,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"18","title":"18. Single state in Hydra.Node.\\n","authors":[],"tags":["Superseded"]},"unlisted":false,"prevItem":{"title":"17. Use UDP protocol for Hydra networking\\n","permalink":"/head-protocol/unstable/adr/17"},"nextItem":{"title":"19. Use of reference scripts\\n","permalink":"/head-protocol/unstable/adr/19"}}')}}]);