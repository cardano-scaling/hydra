"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[171],{18210:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var s=t(31275),o=t(74848),r=t(28453);const i={slug:8,title:"8. Custom Prelude\n",authors:[],tags:["Accepted"]},l=void 0,a={authorsImageUrls:[]},c=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,o.jsx)(n.p,{children:"Accepted"}),"\n",(0,o.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,o.jsxs)(n.p,{children:["In a Haskell project, we often get to use and re-use the same libraries and functions. Haskell comes with a default ",(0,o.jsx)(n.code,{children:"Prelude"})," package with the ",(0,o.jsx)(n.code,{children:"base"})," library, which provides a good and sensible starting point. However, the base ",(0,o.jsx)(n.code,{children:"Prelude"})," also comes with a few quirks:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Many commonly used functions or constructors are not exported by default (e.g. ",(0,o.jsx)(n.code,{children:"bracket"}),", ",(0,o.jsx)(n.code,{children:"foldM"}),", ",(0,o.jsx)(n.code,{children:"first"}),", ",(0,o.jsx)(n.code,{children:"lift"}),", ",(0,o.jsx)(n.code,{children:"forM"}),", ",(0,o.jsx)(n.code,{children:"when"}),", ",(0,o.jsx)(n.code,{children:"SomeException"}),", ",(0,o.jsx)(n.code,{children:"Set"}),", ",(0,o.jsx)(n.code,{children:"&"})," ...etc)."]}),"\n",(0,o.jsxs)(n.li,{children:["Many functions in the base Prelude are partial, like ",(0,o.jsx)(n.code,{children:"head"})," or ",(0,o.jsx)(n.code,{children:"read"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Many functions simply happens in plain ",(0,o.jsx)(n.code,{children:"IO"}),", whereas applications usually try to push IO to the boundary as much as possible (for example, using mtl-style class constraints)."]}),"\n",(0,o.jsxs)(n.li,{children:["The interface for I/O operations in the base Prelude is ",(0,o.jsx)(n.code,{children:"String"}),", which comes with quite major performance hit and often forces to convert back and forth to ",(0,o.jsx)(n.code,{children:"Text"})," or ",(0,o.jsx)(n.code,{children:"ByteString"})," equivalents."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["All-in-all, while it ",(0,o.jsx)(n.em,{children:"does the job"}),", the base ",(0,o.jsx)(n.code,{children:"Prelude"})," may not necessarily be the most ",(0,o.jsx)(n.em,{children:"convenient"})," prelude for an active project development."]}),"\n",(0,o.jsx)(n.h2,{id:"decision",children:"Decision"}),"\n",(0,o.jsxs)(n.p,{children:["We'll use a custom prelude to help us get more productive and more importantly, to reduce the daily friction of our interactions with the base prelude. While ",(0,o.jsx)(n.a,{href:"https://hackage.haskell.org/package/relude",children:(0,o.jsx)(n.code,{children:"relude"})})," makes for a good candidate, we still chose to re-wrap it in a custom ",(0,o.jsx)(n.code,{children:"Hydra.Prelude"})," module to grant us the ability to add or remove a few things specifics to Hydra and Cardano in general. In particular, we will hide from ",(0,o.jsx)(n.code,{children:"relude"})," all the re-exports of the ",(0,o.jsx)(n.a,{href:"https://hackage.haskell.org/package/stm",children:(0,o.jsx)(n.code,{children:"stm"})})," library in favor of ",(0,o.jsx)(n.a,{href:"https://github.com/input-output-hk/ouroboros-network/tree/e338f2cf8e1078fbda9555dd2b169c6737ef6774/io-classes",children:(0,o.jsx)(n.code,{children:"io-classes"})})," which we already use pervasively and which provides (among other things) most of the same capabilities."]}),"\n",(0,o.jsx)(n.h2,{id:"consequences",children:"Consequences"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Remove uses of 'cardano-prelude' in favor of a new 'hydra-prelude' module."}),"\n",(0,o.jsx)(n.li,{children:"Cleaning up of imports from existing file modules."}),"\n",(0,o.jsx)(n.li,{children:"Happier feeling day after day from using a developer-friendly prelude."}),"\n",(0,o.jsx)(n.li,{children:"Stop loosing time in often re-importing the same functions over and over."}),"\n",(0,o.jsx)(n.li,{children:"Have an explicit point for discouraging / blessing usage of one or the other function, as well as documenting such decisions"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(96540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},31275:e=>{e.exports=JSON.parse('{"permalink":"/head-protocol/unstable/adr/8","source":"@site/adr/2021-06-18_008-use-custom-prelude.md","title":"8. Custom Prelude\\n","description":"Status","date":"2021-06-18T00:00:00.000Z","tags":[{"inline":true,"label":"Accepted","permalink":"/head-protocol/unstable/adr/tags/accepted"}],"readingTime":1.68,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"8","title":"8. Custom Prelude\\n","authors":[],"tags":["Accepted"]},"unlisted":false,"prevItem":{"title":"7. Use with-pattern based component interfaces\\n","permalink":"/head-protocol/unstable/adr/7"},"nextItem":{"title":"9. Simplify Logging\\n","permalink":"/head-protocol/unstable/adr/9"}}')}}]);