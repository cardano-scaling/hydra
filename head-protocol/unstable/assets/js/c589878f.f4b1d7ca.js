"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[2175],{30585:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var o=n(25508),a=n(74848),s=n(28453);const r={slug:7,title:"7. Use with-pattern based component interfaces\n",authors:[],tags:["Accepted"]},c=void 0,i={authorsImageUrls:[]},l=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"status",children:"Status"}),"\n",(0,a.jsx)(t.p,{children:"Accepted"}),"\n",(0,a.jsx)(t.h2,{id:"context",children:"Context"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.em,{children:"with pattern"})," or ",(0,a.jsx)(t.em,{children:"bracket pattern"})," is a functional programming idiom, a\nparticular instance of ",(0,a.jsx)(t.em,{children:"Continuation-Passing Style"}),', whereby one component that\ncontrols some resource that is consumed by another component of the system, is\ncreated via a function that takes as argument a function consuming the resource,\ninstead of returning it. This pattern allows safe reclaiming of resources when\nthe "wrapped" action terminates, whether normally or unexpectedly.']}),"\n",(0,a.jsx)(t.p,{children:'TODO "Tying the knot"'}),"\n",(0,a.jsx)(t.h2,{id:"decision",children:"Decision"}),"\n",(0,a.jsxs)(t.p,{children:["We use this pattern to provide interfaces to all ",(0,a.jsx)(t.em,{children:"active components"}),", which\nexchange messages with other components of the system. A prototypical signature\nof such a component could be:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-hs",children:"type Component m = inmsg -> m ()\ntype Callback m = outmsg -> m ()\n\nwithXXX :: Callback m -> (Component m -> m a) -> m a\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Note that ",(0,a.jsx)(t.code,{children:"withXXX"})," can also allocate resources in order to provide ",(0,a.jsx)(t.code,{children:"Component"}),"\nor use the ",(0,a.jsx)(t.code,{children:"Callback"}),", e.g. fork threads which invoke ",(0,a.jsx)(t.code,{children:"Callback"}),", but also make\nsure they are cleaned up."]}),"\n",(0,a.jsx)(t.h2,{id:"consequences",children:"Consequences"}),"\n",(0,a.jsx)(t.p,{children:'Components can be layered on top of another to provide additional behavior given the same interface. This also similar to "decorating" in the object-orientation world.'}),"\n",(0,a.jsxs)(t.p,{children:["If the ",(0,a.jsx)(t.code,{children:"Component"})," is agnostic about the messages it consumes/produces, it can be defined as a ",(0,a.jsxs)(t.a,{href:"https://hackage.haskell.org/package/base-4.15.0.0/docs/Data-Functor-Contravariant.html",children:[(0,a.jsx)(t.code,{children:"Contravariant"})," functor"]})," and the ",(0,a.jsx)(t.code,{children:"Callback"})," part as a (covariant) ",(0,a.jsx)(t.code,{children:"Functor"}),". This makes it possible to use ",(0,a.jsx)(t.code,{children:"map"})," and ",(0,a.jsx)(t.code,{children:"contramap"})," operations to transform messages."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(96540);const a={},s=o.createContext(a);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:t},e.children)}},25508:e=>{e.exports=JSON.parse('{"permalink":"/head-protocol/unstable/adr/7","source":"@site/adr/2021-06-11_007-with-pattern-component-interfaces.md","title":"7. Use with-pattern based component interfaces\\n","description":"Status","date":"2021-06-11T00:00:00.000Z","tags":[{"inline":true,"label":"Accepted","permalink":"/head-protocol/unstable/adr/tags/accepted"}],"readingTime":1.17,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"7","title":"7. Use with-pattern based component interfaces\\n","authors":[],"tags":["Accepted"]},"unlisted":false,"prevItem":{"title":"6. Network broadcasts all messages\\n","permalink":"/head-protocol/unstable/adr/6"},"nextItem":{"title":"8. Custom Prelude\\n","permalink":"/head-protocol/unstable/adr/8"}}')}}]);