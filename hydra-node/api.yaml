---
"$schema": http://json-schema.org/draft/2020-12/schema
"$id": https://raw.githubusercontent.com/input-output-hk/hydra-poc/master/docs/api.json
"$comment": A synthetic description of the WebSocket API for Hydra Head nodes.
title: Hydra WebSocket API
description: >
  This schema documents the Client API of Hydra Node's Head  protocol, allowing
  clients to:

    * Perform operations on the head itself, like initialising or closing it,
    * Submit transactions once the head is open,
    * Receive notifications from the server node.

  This API takes the form of various JSON data structures that represent either inputs
  from the client or outputs from the server. It is served over a websocket connection
  and is fully asynchronous: Inputs from the client are queued for later processing on
  the server-side, and outputs can occur at any time.

properties:
  inputs:
    type: array
    additionalItems: false
    items:
      oneOf:
      - title: Init
        type: object
        description: >
          Initialises a new Head. This command is a no-op when a Head is already open and
          the server will output an 'CommandFailed' message should this happen.
        required:
        - tag
        - contestationPeriod
        properties:
          tag:
            type: string
            enum: ["Init"]
          contestationPeriod:
            type: number

      - title: Abort
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["Abort"]

      - title: Commit
        type: object
        required:
        - tag
        - utxo
        properties:
          tag:
            type: string
            enum: ["Commit"]
          utxo:
            $ref: "#/definitions/Utxo"

      - title: NewTx
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["NewTx"]
          transaction:
            $ref: "#/definitions/Transaction"

      - title: GetUtxo
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["GetUtxo"]

      - title: Close
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["Close"]

      - title: Contest
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["Contest"]

  outputs:
    type: array
    additionalItems: false
    items:
      oneOf:
      - title: PeerConnected
        type: object
        required:
        - tag
        - peer
        properties:
          tag:
            type: string
            enum: ["PeerConnected"]
          peer: { "$ref": "#/definitions/Peer" }

      - title: PeerDisconnected
        type: object
        required:
        - tag
        - peer
        properties:
          tag:
            type: string
            enum: ["PeerDisconnected"]
          peer:
            $ref: "#/definitions/Peer"

      - title: ReadyToCommit
        type: object
        required:
        - tag
        - parties
        properties:
          tag:
            type: string
            enum: ["ReadyToCommit"]
          parties:
            type: array
            items:
              $comment: "TODO: should be Party"
              $ref: "#/definitions/Peer"

      - title: Committed
        type: object
        required:
        - tag
        - party
        - utxo
        properties:
          tag:
            type: string
            enum: ["Committed"]
          party:
            $comment: "TODO: should be Party"
            $ref: "#/definitions/Peer"
          utxo:
            $ref: "#/definitions/Utxo"

      - title: HeadIsOpen
        type: object
        required:
        - tag
        - utxo
        properties:
          tag:
            type: string
            enum: ["HeadIsOpen"]
          utxo:
            $ref: "#/definitions/Utxo"

      - title: HeadIsClosed
        type: object
        required:
        - tag
        - contestationDeadline
        - latestSnapshot
        properties:
          tag:
            type: string
            enum: ["HeadIsClosed"]
          contestationDeadline:
            type: string
            format: date-time
          latestSnapshot:
            $ref: "#/definitions/Snapshot"

      - title: HeadIsAborted
        type: object
        required:
        - tag
        - utxo
        properties:
          tag:
            type: string
            enum: ["HeadIsAborted"]
          utxo:
            $ref: "#/definitions/Utxo"

      - title: HeadIsFinalized
        type: object
        required:
        - tag
        - utxo
        properties:
          tag:
            type: string
            enum: ["HeadIsFinalized"]
          utxo:
            $ref: "#/definitions/Utxo"

      - title: TxSeen
        type: object
        required:
        - tag
        - transaction
        properties:
          tag:
            type: string
            enum: ["TxSeen"]
          transaction:
            $ref: "#/definitions/Transaction"

      - title: TxValid
        type: object
        required:
        - tag
        - transaction
        properties:
          tag:
            type: string
            enum: ["TxValid"]
          transaction:
            $ref: "#/definitions/Transaction"

      - title: TxInvalid
        type: object
        required:
        - tag
        - utxo
        - transaction
        - validationError
        properties:
          tag:
            type: string
            enum: ["TxInvalid"]
          utxo:
            $ref: "#/definitions/Utxo"
          transaction:
            $ref: "#/definitions/Transaction"
          validationError:
            type: object
            properties:
              reason:
                type: string

      - title: SnapshotConfirmed
        type: object
        required:
        - tag
        - snapshot
        properties:
          tag:
            type: string
            enum: ["SnapshotConfirmed"]
          snapshot:
            $ref: "#/definitions/Snapshot"

      - title: Utxo
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["Utxo"]
          utxo:
            $ref: "#/definitions/Utxo"

      - title: CommandFailed
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["CommandFailed"]

      - title: InvalidInput
        type: object
        required:
        - tag
        - reason
        - input
        properties:
          tag:
            type: string
            enum: ["InvalidInput"]
          reason:
            type: string
          input:
            type: string

  utxo:
    type: array
    items:
      $ref: "#/definitions/Utxo"
    additionalItems: false

  txs:
    type: array
    items:
      $ref: "#/definitions/Transaction"
    additionalItems: false

definitions:
  Peer:
    type: integer
    examples:
      - 1
      - 2
      - 3

  Snapshot:
    type: object
    required:
    - snapshotNumber
    - utxo
    - confirmedTransactions
    properties:
      snapshotNumber:
        type: integer
      utxo:
        $ref: "#/definitions/Utxo"
      confirmedTransactions:
        type: array
        items:
          $ref: "#/definitions/Transaction"

  Utxo:
    type: object
    description: >-
      Cardano Unspent transaction outputs (Utxo), mapping from TxId#index to TxOut
    items:
      $ref: "#/definitions/TxOut"
    propertyNames:
      pattern: "^[0-9a-f]{64}#[0-9]+$"
    examples:
      - "09d34606abdcd0b10ebc89307cbfa0b469f9144194137b45b7a04b273961add8#687":
          "address": "addr1w9htvds89a78ex2uls5y969ttry9s3k9etww0staxzndwlgmzuul5"
          "value":
            "lovelace": 7620669

  Transaction:
    type: object
    description: >-
      A full Mary-era Cardano transaction. This is a simplification over the full definition of a Cardano Transaction,
      whose grammar is described using CDDL here: https://github.com/input-output-hk/cardano-ledger-specs/blob/master/shelley-ma/shelley-ma-test/cddl-files/shelley-ma.cddl#L13
    required:
    - id
    - body
    - witnesses
    - auxiliaryData
    properties:
      id:
        $ref: "#/definitions/TxId"
      body:
        $ref: "#/definitions/TxBody"
      witnesses:
        type: object
        required:
        - keys
        - scripts
        properties:
          keys:
            type: array
            description: >-
              List of public keys witnessing pay-to-pubkey inputs.
            items:
              $ref: "#/definitions/Cbor"
          scripts:
            type: object
            description: >-
              An object mapping script hashes to script definitions, encoded in CBOR.
            patternProperties:
              "[0-9a-f]+":
                $ref: "#/definitions/Cbor"

      auxiliaryData:
        description: >-
          Hex-encoding of CBOR encoding of auxiliary data attached to this transaction. Can be null if
          there's no auxiliary data
        oneOf:
        - type: "null"
        - $ref: "#/definitions/Cbor"

  TxId:
    type: string
    pattern: "^[0-9a-f]{64}"
    description: >-
      A Cardano transaction identifier. This is the hex-encoded hash of the
      transaction's body.
    examples:
      - "8df1616d4337ede40bbad2914f12977815234b83951bcce3bfcd735aed3f63e4"

  TxBody:
    type: object
    required:
    - inputs
    - outputs
    properties:
      inputs:
        type: array
        description: >-
          A list of inputs for this transaction. Technically, this is actually a Set, eg. the order of elements does not matter and they must be unique.
        items:
          $ref: "#/definitions/TxIn"
      outputs:
        type: array
        description: >-
          A list of outputs. Ordering is important here because a TxOut is referenced by its
          position in the inputs of subsequent transactions.
        items:
          $ref: "#/definitions/TxOut"
      certificates:
        type: array
        description: >-
          An array of certificates, encoded as hexadecimal representation of CBOR serialisation.
        items:
          $ref: "#/definitions/Cbor"
      withdrawals:
        type: array
        description: >-
          An array of withdrawal.
        items:
          $ref: "#/definitions/Wdrl"
      fees:
        type: number
        minimum: 0
        description: >-
          Fees paid for this transaction, in ADA
      validity:
        type: object
        description: >-
          Validity interval of this transaction. Both bounds can be omitted in which case the transaction
          has unlimited validity. Each bound is a slot number.
        properties:
          notBefore:
            type: integer
          notAfter:
            type: integer
      auxiliaryDataHash:
        type: [ "string", "null"]
        description: >-
          Hex-encoding of the hash of auxiliary data section of the transactions.
        examples:
        - "9b258583229a324c3021d036e83f3c1e69ca4a586a91fad0bc9e4ce79f7411e0"
      mint:
        description: >-
          Values minted by this transaction
        $ref: "#/definitions/Value"

  TxIn:
    type: string
    pattern: "^[0-9a-f]{64}#[0-9]+$"
    description: >-
      A reference to a Cardano transaction output, commonly used as transaction
      input and thus named TxIn. Constructed from the transaction's id and
      the ouput index, separated by a '#'.
    examples:
      - "03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314#4"

  TxOut:
    type: object
    description: >-
      A single transaction output
    required:
    - address
    - value
    properties:
      address:
        $ref: "#/definitions/Address"
      value:
        $ref: "#/definitions/Value"

  Address:
    type: string
    description: >-
      A bech-32 encoded Cardano address, see
      https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki#Bech32s and
      https://github.com/cardano-foundation/CIPs/blob/master/CIP-0005/CIP-0005.md
    examples:
      - "addr1w9htvds89a78ex2uls5y969ttry9s3k9etww0staxzndwlgmzuul5"
      - "addr_test1gpr87kyn9d2fzpvy5r5w5fdzyhsx59znpvhfd6fcc5ar7g5yl33cdg0cq24ewdshsutgm"

  Value:
    type: object
    description: >-
      A Mary-era Cardano value. This is an object containing a number of lovelaces, and
      optional assets, mapping some monetary policy identifier to a
      mapping of coin (arbitrary strings) to some integer value.

      Assets represent native tokens available on the Cardano blockchain,
      including Non-Fungible Tokens.
    required:
    - lovelace
    properties:
      lovelace:
        type: integer
        minimum: 0
        description: >-
          A (positive) amount of lovelace
      assets:
        type: object
        description: >-
          A map from monetary policy id to assets. A policy id is a
          hex-encoded string of some arbitrary bytes.
        patternProperties:
          "[0-9a-f]+":
            type: object
            description: >-
              A map of 'asset names' to integral values. The key is
              the hex-encoded name of the asset.
            patternProperties:
              "[0-9a-f]*":
                type: integer
                minimum: 0
                description: >-
                  Some positive number of some 'coin'.

  Cbor:
    type: string
    description: >-
      The hex-encoding of the CBOR encoding of some binary data
    examples:
      - "820082582089ff4f3ff4a6052ec9d073b3be68b5e7596bd74a04e7b74504a8302fb2278cd95840f66eb3cd160372d617411408792c0ebd9791968e9948112894e2706697a55c10296b04019ed2f146f4d81e8ab17b9d14cf99569a2f85cbfa32320127831db202"

  Wdrl:
    type: array
    description: >-
      A withdrawal of some number of coins to some reward address, expressed as a pair.
    prefixItems:
    - type: object
      required:
      - network
      - credential
      properties:
        network:
          type: string
          description: >-
            Identification of the network the address is valid for
          enum: ["Mainnet", "Testnet"]
        credential:
          type: object
          minProperties: 1
          maxProperties: 1
          properties:
            "script hash":
              type: string
              description: >-
                Hexadecimal string of the hash of a script
            "key hash":
              type: string
              description: >-
                Hexadecimal string of the hash of a public key
    - type: integer
      minimum: 0
      description:  >-
        Number of ADAs withdrawn to the given address
