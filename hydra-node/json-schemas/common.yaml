---
"$schema": http://json-schema.org/draft/2020-12/schema
"$comment": Common object definitions used across the WebSocket API and Logging API.
title: Common Definitions
definitions:
  Address:
    type: string
    description: >-
      A bech-32 encoded Cardano address, see
      https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki#Bech32s and
      https://github.com/cardano-foundation/CIPs/blob/master/CIP-0005/CIP-0005.md
    examples:
      - "addr1w9htvds89a78ex2uls5y969ttry9s3k9etww0staxzndwlgmzuul5"
      - "addr_test1gpr87kyn9d2fzpvy5r5w5fdzyhsx59znpvhfd6fcc5ar7g5yl33cdg0cq24ewdshsutgm"

  Cbor:
    type: string
    contentEncoding: base16
    format: cbor
    description: >-
      The hex-encoding of the CBOR encoding of some binary data
    examples:
      - "820082582089ff4f3ff4a6052ec9d073b3be68b5e7596bd74a04e7b74504a8302fb2278cd95840f66eb3cd160372d617411408792c0ebd9791968e9948112894e2706697a55c10296b04019ed2f146f4d81e8ab17b9d14cf99569a2f85cbfa32320127831db202"

  HeadParameters:
    type: object
    additionalProperties: false
    required:
      - contestationPeriod
      - parties
    properties:
      contestationPeriod:
        type: integer
      parties:
        type: array
        items:
          $ref: "#/definitions/Party"

  Party:
    type: object
    description: >-
      The verification key for some Party in the Head protocol, uniquely identifying it.
    additionalProperties: false
    required:
      - vkey
    properties:
      vkey:
        type: string
        contentEncoding: base16
    examples:
      - { "vkey": "0000000000000000" }
      - { "vkey": "0000000000000001" }
      - { "vkey": "0000000000000002" }

  Peer:
    type: object
    properties:
      hostname:
        type: string
        format: hostname
      port:
        type: number
    examples:
      - hostname: "10.0.0.10"
        port: 5001

  Point:
    oneOf:
    - title: Origin
      type: string
      enum: ["Origin"]

    - title: "Any"
      type: object
      required:
        - slot
        - hash
      properties:
        slot:
          type: integer
        hash:
          type: string
          contentEncoding: base16

  SeenSnapshot:
    oneOf:
    - title: NoSeenSnapshot
      type: object
      additionalProperties: false
      required:
        - tag
      properties:
        tag:
          type: string
          enum: ["NoSeenSnapshot"]
    - title: RequestedSnapshot
      type: object
      additionalProperties: false
      required:
        - tag
      properties:
        tag:
          type: string
          enum: ["RequestedSnapshot"]
    - title: SeenSnapshot
      type: object
      additionalProperties: false
      required:
        - tag
        - snapshot
        - signatories
      properties:
        tag:
          type: string
          enum: ["SeenSnapshot"]
        snapshot:
          $ref: "#/definitions/Snapshot"
        signatories:
          type: array
          items:
            $ref: "#/definitions/Party"

  Snapshot:
    type: object
    required:
    - snapshotNumber
    - utxo
    - confirmedTransactions
    properties:
      snapshotNumber:
        $ref: "#/definitions/SnapshotNumber"
      utxo:
        $ref: "#/definitions/UTxO"
      confirmedTransactions:
        type: array
        items:
          $ref: "#/definitions/Transaction"

  SnapshotNumber:
    type: integer
    minimum: 0

  ConfirmedSnapshot:
    oneOf:
    - title: "InitialSnapshot"
      type: object
      additionalProperties: false
      required:
        - snapshot
        - tag
      properties:
        snapshot:
          $ref: "#/definitions/Snapshot"
        tag:
          type: string
          enum: ["InitialSnapshot"]

    - title: "ConfirmedSnapshot"
      type: object
      additionalProperties: false
      required:
        - snapshot
        - signatures
      properties:
        snapshot:
          $ref: "#/definitions/Snapshot"
        signatures:
          $ref: "#/definitions/MultiSigned"
        tag:
          type: string
          enum: ["ConfirmedSnapshot"]

  MultiSigned:
    type: object
    description: >-
      Aggregated signature produced by Head protocol when a Snapshot is confirmed by all parties.
    additionalProperties: false
    required:
    - multiSignature
    properties:
      multiSignature:
        type: array
        items:
          $ref: "#/definitions/Signed"

  Signed:
    type: string
    description: >-
      A base64-encoded signature.
    contentEncoding: base16

  Transaction:
    type: object
    description: >-
      A full Mary-era Cardano transaction. This is a simplification over the full definition of a Cardano Transaction,
      whose grammar is described using CDDL here: https://github.com/input-output-hk/cardano-ledger-specs/blob/master/shelley-ma/shelley-ma-test/cddl-files/shelley-ma.cddl#L13
    required:
    - id
    - isValid
    - body
    additionalProperties: false
    properties:
      id:
        $ref: "#/definitions/TxId"
      isValid:
          type: boolean
      body:
        $ref: "#/definitions/TxBody"
      witnesses:
        type: object
        additionalProperties: false
        properties:
          keys:
            type: array
            description: >-
              List of public keys witnessing pay-to-pubkey inputs.
            items:
              $ref: "#/definitions/Cbor"
          scripts:
            type: object
            description: >-
              An object mapping script hashes to script definitions, encoded in CBOR.
            patternProperties:
              "[0-9a-f]+":
                $ref: "#/definitions/Cbor"
          redeemers:
            <<: { $ref: "#/definitions/Cbor" }
            description: >-
              An hex-encoded, CBOR-serialised, mapping of redeemer hashes to their definition.
          datums:
            type: object
            description: >-
              An object mapping datum hashes to their definition, encoded in CBOR
            patternProperties:
              "[0-9a-f]+":
                $ref: "#/definitions/Cbor"
      auxiliaryData:
        <<:
          $ref: "#/definitions/Cbor"
        description: >-
          Hex-encoding of CBOR encoding of auxiliary data attached to this transaction. Can be null if
          there's no auxiliary data

  TxBody:
    type: object
    required:
    - inputs
    - outputs
    additionalProperties: false
    properties:
      inputs:
        type: array
        description: >-
          A list of inputs for this transaction. Technically, this is actually a Set, eg. the order of elements does not matter and they must be unique.
        items:
          $ref: "#/definitions/TxIn"
      collateral:
        type: array
        description: >-
          A list of collateral inputs for this transaction.
        items:
          $ref: "#/definitions/TxIn"
      outputs:
        type: array
        description: >-
          A list of outputs. Ordering is important here because a TxOut is referenced by its
          position in the inputs of subsequent transactions.
        items:
          $ref: "#/definitions/TxOut"
      certificates:
        type: array
        description: >-
          An array of certificates, encoded as hexadecimal representation of CBOR serialisation.
        items:
          $ref: "#/definitions/Cbor"
      withdrawals:
        type: array
        description: >-
          An array of withdrawal.
        items:
          $ref: "#/definitions/Withdrawal"
      fees:
        type: integer
        minimum: 0
        description: >-
          Fees paid for this transaction, in lovelace.
      validity:
        type: object
        description: >-
          Validity interval of this transaction. Both bounds can be omitted in which case the transaction
          has unlimited validity. Each bound is a slot number.
        properties:
          notBefore:
            type: integer
          notAfter:
            type: integer
      auxiliaryDataHash:
        type: string
        contentEncoding: base16
        description: >-
          Hex-encoding of the hash of auxiliary data section of the transactions.
        examples:
        - "9b258583229a324c3021d036e83f3c1e69ca4a586a91fad0bc9e4ce79f7411e0"
      mint:
        description: >-
          Values minted by this transaction
        $ref: "#/definitions/Value"
      networkId:
          type: string
          enum:
            - Mainnet
            - Testnet
      scriptIntegrityHash:
        type: string
        contentEncoding: base16
        description: >-
          Hex-encoding of the hash of script data section of the transaction.
        examples:
        - "9b258583229a324c3021d036e83f3c1e69ca4a586a91fad0bc9e4ce79f7411e0"
      requiredSignatures:
        type: array
        items:
          type: string
          contentEncoding: base16
          description: >-
            Hex-encoding of the hash of verification keys identifying extra expected signers.

  TxId:
    type: string
    pattern: "^[0-9a-f]{64}"
    description: >-
      A Cardano transaction identifier. This is the hex-encoded hash of the
      transaction's body.
    examples:
      - "8df1616d4337ede40bbad2914f12977815234b83951bcce3bfcd735aed3f63e4"

  TxIn:
    type: string
    pattern: "^[0-9a-f]{64}#[0-9]+$"
    description: >-
      A reference to a Cardano transaction output, commonly used as transaction
      input and thus named TxIn. Constructed from the transaction's id and
      the ouput index, separated by a '#'.
    examples:
      - "03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314#4"

  TxOut:
    type: object
    description: >-
      A single transaction output
    required:
    - address
    - value
    additionalProperties: false
    properties:
      address:
        $ref: "#/definitions/Address"
      value:
        $ref: "#/definitions/Value"
      datumhash:
        type: string
        contentEncoding: base16

  UTxO:
    type: object
    description: >-
      Cardano Unspent transaction outputs (UTxO), mapping from TxId#index to TxOut
    items:
      $ref: "#/definitions/TxOut"
    propertyNames:
      pattern: "^[0-9a-f]{64}#[0-9]+$"
    examples:
      - "09d34606abdcd0b10ebc89307cbfa0b469f9144194137b45b7a04b273961add8#687":
          "address": "addr1w9htvds89a78ex2uls5y969ttry9s3k9etww0staxzndwlgmzuul5"
          "value":
            "lovelace": 7620669

  Value:
    type: object
    description: >-
      A Mary-era Cardano value. This is an object containing a number of lovelaces, and
      optional assets, mapping some monetary policy identifier to a
      mapping of coin (arbitrary strings) to some integer value.
      Assets represent native tokens available on the Cardano blockchain, including Non-Fungible Tokens.
    additionalProperties:
      type: object
      description: >-
        A map of 'asset names' to integral values. The key is
        the hex-encoded name of the asset.
      minProperties: 1
      patternProperties:
        "[0-9a-f]*":
          type: integer
          minimum: 0
          description: >-
            Some positive number of some 'coin'.
    properties:
      lovelace:
        type: integer
        minimum: 0
        description: >-
          A (positive) amount of lovelace

  Withdrawal:
    type: object
    description: >-
      A withdrawal of some number of coins to some reward address.
    additionalProperties: false
    patternProperties:
      "[0-9a-f]+":
        type: integer
        minimum: 0
        description: >-
          Some non-negative lovelace value.

  PostChainTx:
    description: >-
      Description of outgoing On-Chain transactions for the Head protocol. As is
      the case for OnChainTx, these data structures completely abstract away the
      actual details of the transaction and only represent data relevant for the
      protocol to make some progress.
    oneOf:
      - title: InitTx
        type: object
        additionalProperties: false
        required:
        - tag
        - headParameters
        description: >-
          The initial transaction of the Head defining its parameters.
        properties:
          tag:
            type: string
            enum: ["InitTx"]
          headParameters:
            $ref: "#/definitions/HeadParameters"
      - title: CommitTx
        type: object
        additionalProperties: false
        required:
        - tag
        - party
        - committed
        description: >-
          Commit some UTxO set to the opening Head, signed by this party.
        properties:
          tag:
            type: string
            enum: ["CommitTx"]
          party:
            $ref: "#/definitions/Party"
          committed:
            $ref: "#/definitions/UTxO"
      - title: AbortTx
        type: object
        additionalProperties: false
        required:
        - tag
        - utxo
        description: >-
          Abort the opening of the Head process.
        properties:
          tag:
            type: string
            enum: ["AbortTx"]
          utxo:
            $ref: "#/definitions/UTxO"
      - title: CollectComTx
        type: object
        additionalProperties: false
        required:
        - tag
        - utxo
        description: >-
          Confirm the opening of the Head collecting the committed UTxO set
          combined from all individual commits.
        properties:
          tag:
            type: string
            enum: ["CollectComTx"]
          utxo:
            $ref: "#/definitions/UTxO"
      - title: CloseTx
        type: object
        additionalProperties: false
        required:
        - tag
        - confirmedSnapshot
        description: >-
          Close the currently open Head with the given snapshot.
        properties:
          tag:
            type: string
            enum: ["CloseTx"]
          confirmedSnapshot:
            $ref: "#/definitions/ConfirmedSnapshot"
      - title: ContestTx
        type: object
        additionalProperties: false
        required:
        - tag
        - snapshot
        description: >-
          Contest a previously posted snapshot (from a Close or Contest
          transaction) with a newer snapshot.
        properties:
          tag:
            type: string
            enum: ["ContestTx"]
          snapshot:
            $ref: "#/definitions/Snapshot"
      - title: FanoutTx
        type: object
        additionalProperties: false
        required:
        - tag
        - utxo
        description: >-
          Finalise the Head posting all UTxO from the Head on-chain.
        properties:
          tag:
            type: string
            enum: ["FanoutTx"]
          utxo:
            $ref: "#/definitions/UTxO"

  PostTxError:
    description: >-
      Provides more details about transaction submission failure.
    oneOf:
      - title: MoreThanOneUTxOCommitted
        type: object
        additionalProperties: false
        required:
        - tag
        description: >-
          A commit transaction tried to commit more than one UTxO on-chain.
          **Note**: Due to transaction size constraints and the unbounded size of value carried in a UTxO,
          it is a current limitation in the Head protocol that each participant can only commit one UTxO.
          This restriction should be alleviated in future versions of the protocol.
        properties:
          tag:
            type: string
            enum: ["MoreThanOneUTxOCommitted"]
      - title: CannotSpendInput
        type: object
        additionalProperties: false
        required:
        - tag
        - input
        - walletUTxO
        - headUTxO
        description: >-
          Some input in a transaction cannot be resolved to a proper UTxO. This can happen either when some input
          is double-spent or the DirectChain component has not yet caught up with the chain.
        properties:
          tag:
            type: string
            enum: ["CannotSpendInput"]
          input:
            type: string
            description: >-
              A representation of the faulty input, in the form 'txId#txIx'.
              **NOTE**: We would like to use a proper TxIn type reference here but this is not possible because of
              constraints in the codebase and whatnot. See https://raw.githubusercontent.com/input-output-hk/hydra-poc/master/hydra-node/json-schemas/#/definitions/TxIn.
          walletUTxO:
            $ref: "#/definitions/UTxO"
            description: >-
              The UTxO observed from the chain relevant for the current party.
          headUTxO:
            $ref: "#/definitions/UTxO"
            description: >-
              The Head protocol-relevant UTxO. Depending on the Head's current state, it includes the Head state thread output,
              plus the ν_initial or ν_commit outputs.
      - title: CannotCoverFees
        type: object
        additionalProperties: false
        required:
        - tag
        - walletUTxO
        - headUTxO
        - reason
        - tx
        description: >-
          The DirectChain component's internal wallet has been unabled to cover the required fees to post the given
          transaction. This could come from a variety of reason which are detailed in the 'reason' field.
        properties:
          tag:
            type: string
            enum: ["CannotCoverFees"]
          walletUTxO:
            $ref: "#/definitions/UTxO"
            description: >-
              The UTxO observed from the chain relevant for the current party.
              **Note**: In the current version, all fees are paid using a specially "marked" UTxO that is expected to
              carry enough ADAs to pay for the Head protocol's advance and is consumed and produced upon each transaction.
          headUTxO:
            $ref: "#/definitions/UTxO"
            description: >-
              The Head protocol-relevant UTxO.
          reason:
            type: string
            description: >-
              Textual representation of the underlying failure to cover fees.
          tx:
            $ref: "#/definitions/Transaction"
            description: >-
              The partial transaction that was being posted.
      - title: CannotFindOwnInitial
        type: object
        additionalProperties: false
        required:
        - tag
        - knownUTxO
        description: >-
          The DirectChain was unable to find the output paying to Initial script corresponding
          to this node's Party, with the relevant _Participation Token_.
        properties:
          tag:
            type: string
            enum: ["CannotFindOwnInitial"]
          knownUTxO:
            $ref: "#/definitions/UTxO"
            description: >-
              The known UTxO within which the Initial script was looked up for.
      - title: NoSeedInput
        type: object
        additionalProperties: false
        required:
        - tag
        description: >-
          Initialising a new Head failed because the DirectChain component was unable to find
          a "seed" UTxO to consume. This can happen if no UTxO has been assigned to the internal wallet's address
          for this purpose, or if the component is still catching up with the chain.

          This error is usually transient and clients should retry to post the transaction.
        properties:
          tag:
            type: string
            enum: ["NoSeedInput"]
      - title: NoPaymentInput
        type: object
        additionalProperties: false
        required:
        - tag
        description: >-
          The internal wallet was unable to find a "Payment" UTxO to consume.
          This can happen if no UTxO available to the internal wallet is
          "marked" for this purpose, or if the component is still catching up
          with the chain.

          Ensure that you have "seeded" the network using provided scripts and
          tools (see demo tutorial).
        properties:
          tag:
            type: string
            enum: ["NoPaymentInput"]
      - title: InvalidStateToPost
        type: object
        additionalProperties: false
        required:
        - tag
        - txTried
        description: >-
          Attempted to post a transaction that's invalid given current protocol's state. This is definitely a **BUG**.
        properties:
          tag:
            type: string
            enum: ["InvalidStateToPost"]
          txTried:
            $ref: "#/definitions/PostChainTx"
