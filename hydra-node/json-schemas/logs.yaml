---
"$id": https://raw.githubusercontent.com/input-output-hk/hydra-poc/master/hydra-node/json-schemas/
"$schema": http://json-schema.org/draft/2020-12/schema
"$comment": A description of the log items produced by a Hydra node
title: Hydra Log API
description: >
  This schema documents the structure of the Log items produced by a Hydra node
  via its standard output stream. Items are emitted as individual JSON objects,
  separated by a newline which makes it easy to ingest by thirdparty tools and
  services.

type: object
additionalProperties: false

properties:
  messages:
    type: array
    additionalItems: false
    items:
      type: object
      additionalProperties: false
      required:
      - namespace
      - timestamp
      - threadId
      - message
      properties:
        namespace:
          type: string
          description: >-
            An arbitrary string identifying the tracer generating this entry. For a
            node, this is always 'HydraNode'.

        timestamp:
          type: string
          format: "date-time"
          description: >-
            Timestamp denoting the wall-clock time at which this log entry was
            recorded.

        threadId:
          type: integer
          description: >-
            The id of the thread which produced the log entry.

        message:
          oneOf:
          - title: APIServer
            type: object
            additionalProperties: false
            required:
            - tag
            - api
            description: >-
              A log entry produced by the API server.
            properties:
              tag:
                type: string
                enum: ["APIServer"]
              api:
                $ref: "#/definitions/APIServer"

          - title: Node
            type: object
            additionalProperties: false
            required:
            - tag
            - node
            description: >-
              A log entry denoting events and effects processed by the Node as part
              of the Head protocol.
            properties:
              tag:
                type: string
                enum: ["Node"]
              node:
                $ref: "#/definitions/Node"

          - title: DirectChain
            type: object
            additionalProperties: false
            required:
            - tag
            - directChain
            description: >-
              A log entry produced by the chain component watching the chain.
            properties:
              tag:
                type: string
                enum: ["DirectChain"]
              directChain:
                $ref: "#/definitions/DirectChain"

          - title: Network
            type: object
            additionalProperties: false
            required:
            - tag
            - network
            description: >-
              A log entry from the Hydra network (i.e. the layer-two network between Hydra nodes).
            properties:
              tag:
                type: string
                enum: ["Network"]
              network:
                $ref: "#/definitions/Network"

definitions:
  APIServer:
    oneOf:
    - title: APIServerStarted
      description: >-
        API Server has started and is ready, listening for incoming client
        connections on given port.
      type: object
      additionalProperties: false
      required:
      - tag
      - listeningPort
      properties:
        tag:
          type: string
          enum: ["APIServerStarted"]
        listeningPort:
          type: integer
          minimum: 0
          maximum: 65535
    - title: NewAPIConnection
      description: >-
        A new client has connected to the API Server.
      additionalProperties: false
      required:
      - tag
      properties:
        tag:
          type: string
          enum: ["NewAPIConnection"]
    - title: APIOutputSent
      description: >-
        Some output has been sent to a client.
      additionalProperties: false
      required:
      - tag
      - sentOutput
      properties:
        tag:
          type: string
          enum: ["APIOutputSent"]
        sentOutput:
          type: object
    - title: APIInputReceived
      description: >-
        Some input has been received from a client.
      additionalProperties: false
      required:
      - tag
      - receivedInput
      properties:
        tag:
          type: string
          enum: ["APIInputReceived"]
        receivedInput:
          oneOf:
            - type: "null"
            - type: object
    - title: APIInvalidInput
      description: >-
        Some input sent by a client is invalid.
      additionalProperties: false
      required:
      - tag
      - reason
      - inputReceived
      properties:
        tag:
          type: string
          enum: ["APIInvalidInput"]
        reason:
          type: string
          description: >-
            A textual description of the reason why this input is invalid.
        inputReceived:
          type: string
          description: >-
            A rendering in text of the input received. This input is invalid
            hence it's potentially invalid JSON so we just encode it as a proper
            JSON string. Note that if the input contained invalid UTF-8
            characters they will be ignored.

  DirectChain:
    oneOf:
    - title: ToPost
      description: >-
        Head logic requests submission of a Head protocol transaction.
      type: object
      additionalProperties: false
      required:
        - tag
        - toPost
      properties:
        tag:
          type: string
          enum: ["ToPost"]
        toPost:
          $ref: "api.yaml#/components/schemas/PostChainTx"
    - title: PostingTx
      description: >-
        A transaction with given content is about to be submitted on-chain.
      type: object
      additionalProperties: false
      required:
        - tag
        - postedTx
      properties:
        tag:
          type: string
          enum: ["PostingTx"]
        postedTx:
          type: array
          prefixItems:
            - $ref: "api.yaml#/components/schemas/TxId"
            - $ref: "api.yaml#/components/schemas/Transaction"
    - title: PostedTx
      description: >-
        A transaction with given Id has been successfully submitted to the chain.
      type: object
      additionalProperties: false
      required:
        - tag
        - postedTxId
      properties:
        tag:
          type: string
          enum: ["PostedTx"]
        postedTxId:
          $ref: "api.yaml#/components/schemas/TxId"
    - title: ReceivedTxs
      description: >-
        Some transactions relevant to the Head logic have been observed on-chain, provide both the
        concrete on-chain representation and logical counterpart.
      type: object
      additionalProperties: false
      required:
        - tag
        - onChainTxs
        - receivedTxs
      properties:
        tag:
          type: string
          enum: ["ReceivedTxs"]
        onChainTxs:
          type: array
          items:
            $ref: "#/definitions/OnChainEvent"
        receivedTxs:
          type: array
          items:
            type: integer

    - title: RolledBackward
      description: >-
        Observation of a rollback.
      type: object
      additionalProperties: false
      required:
        - tag
        - point
      properties:
        tag:
          type: string
          enum: ["RolledBackward"]
        point:
          $ref: "api.yaml#/components/schemas/Point"

    - title: Wallet
      description: >-
        Logs coming from the wallet.
      type: object
      additionalProperties: false
      required:
        - tag
        - contents
      properties:
        tag:
          type: string
          enum: ["Wallet"]
        contents:
          $ref: "#/definitions/Wallet"

  Wallet:
    oneOf:
    - title: InitializingWallet
      description: >-
        The wallet has been initialized to some point on the chain and will start syncing block by block from there.
      type: object
      additionalProperties: false
      required:
      - tag
      - point
      - initialUTxO
      properties:
        tag:
          type: string
          enum: ["InitializingWallet"]
        point:
          description: >-
            Whether we queried the tip or some point on the chain.
          type: string
        initialUTxO:
          $ref: "api.yaml#/components/schemas/UTxO"
    - title: ApplyBlock
      description: >-
        The wallet has discovered and applied a new block of interest.
      additionalProperties: false
      required:
      - tag
      - newUTxO
      properties:
        tag:
          type: string
          enum: ["ApplyBlock"]
        newUTxO:
          $ref: "api.yaml#/components/schemas/UTxO"
    - title: EraMismatchError
      description: >-
        The wallet received a block from an era different than the one expected. This should not be a problem as it probably
        signals the wallet is catching up with the chain.
      additionalProperties: false
      required:
      - tag
      - expected
      - actual
      properties:
        tag:
          type: string
          enum: ["EraMismatchError"]
        expected:
          type: string
        actual:
          type: string

  # TODO: Fill the gap!
  Network: {}

  Node:
    oneOf:
    - title: ErrorHandlingEvent
      # This should be removed from the Log's description as soon as we have some proper
      # error handling strategy in place, be it simply "Close the head" and bail out.
      description: >-
        Some error happened while processing an event, provides enough context
        information to troubleshoot the origin of the error.
      type: object
      additionalProperties: false
      required:
      - tag
      - by
      - event
      properties:
        tag:
          type: string
          enum: [ "ErrorHandlingEvent" ]
        by:
          <<: { "$ref": "api.yaml#/components/schemas/Party" }
          description: >-
            The Party emitting the log entry.
        event:
          <<: { "$ref": "#/definitions/Event" }
          description: >-
            The event causing the error.
        reason:
          <<: { "$ref": "#/definitions/LogicError" }
          description: >-
            Structured description of the cause of the error.
    - title: ProcessingEvent
      description: >-
        Head has started processing an event drawn from some pool or queue of
        events to process.
      type: object
      additionalProperties: false
      required:
      - tag
      - by
      - event
      properties:
        tag:
          type: string
          enum: [ "ProcessingEvent" ]
        by:
          <<: { "$ref": "api.yaml#/components/schemas/Party" }
          description: >-
            The Party emitting the log entry.
        event:
          <<: { "$ref": "#/definitions/Event" }
    - title: ProcessedEvent
      description: >-
        Head has succesfully finished processing an event.
      type: object
      additionalProperties: false
      required:
      - tag
      - by
      - event
      properties:
        tag:
          type: string
          enum: [ "ProcessedEvent" ]
        by:
          <<: { "$ref": "api.yaml#/components/schemas/Party" }
          description: >-
            The Party emitting the log entry.
        event:
          $ref: "#/definitions/Event"
    - title: ProcessingEffect
      description: >-
        Head has started processing an effect produced by some transition in the
        protocol.
      type: object
      additionalProperties: false
      required:
      - tag
      - by
      - effect
      properties:
        tag:
          type: string
          enum: [ "ProcessingEffect" ]
        by:
          <<: { "$ref": "api.yaml#/components/schemas/Party" }
          description: >-
            The Party emitting the log entry.
        effect:
          $ref: "#/definitions/Effect"
    - title: ProcessedEffect
      description: >-
        Head has finished processing an effect produced by some transition in the protocol.
      type: object
      additionalProperties: false
      required:
      - tag
      - by
      - effect
      properties:
        tag:
          type: string
          enum: [ "ProcessedEffect" ]
        by:
          <<: { "$ref": "api.yaml#/components/schemas/Party" }
          description: >-
            The Party emitting the log entry.
        effect:
          $ref: "#/definitions/Effect"

  LogicError:
    oneOf:
    - title: InvalidEvent
      additionalProperties: false
      required:
        - tag
        - contents
      properties:
        tag:
          type: string
          enum: [ "InvalidEvent" ]
        contents:
          type: array
          prefixItems:
            - $ref: "#/definitions/Event"
            - $ref: "#/definitions/HeadState"
    - title: InvalidState
      additionalProperties: false
      required:
        - tag
        - contents
      properties:
        tag:
          type: string
          enum: [ "InvalidState" ]
        contents:
          $ref: "#/definitions/HeadState"
    - title: InvalidSnapshot
      additionalProperties: false
      required:
      - tag
      - expected
      - actual
      properties:
        tag:
          type: string
          enum: [ "InvalidSnapshot" ]
        expected:
          $ref: "api.yaml#/components/schemas/SnapshotNumber"
        actual:
          $ref: "api.yaml#/components/schemas/SnapshotNumber"
    - title: LedgerError
      additionalProperties: false
      required:
        - tag
        - contents
      properties:
        tag:
          type: string
          enum: [ "LedgerError" ]
        contents:
          $ref: "#/definitions/ValidationError"

  ValidationError:
    type: object
    additionalProperties: false
    required:
      - reason
    properties:
      reason:
        type: string

  HeadState:
    oneOf:
    - title: "IdleState"
      additionalProperties: false
      required:
        - tag
      properties:
        tag:
          type: string
          enum: [ "IdleState" ]
    - title: "InitialState"
      additionalProperties: false
      required:
        - tag
        - pendingCommits
        - committed
        - previousRecoverableState
      properties:
        tag:
          type: string
          enum: [ "InitialState" ]
        parameters:
          $ref: "api.yaml#/components/schemas/HeadParameters"
        pendingCommits:
          type: array
          items:
            $ref: "api.yaml#/components/schemas/Party"
        committed:
          type: array
          items:
            $ref: "api.yaml#/components/schemas/Party"
        previousRecoverableState:
          $ref: "#/definitions/HeadState"
    - title: "OpenState"
      additionalProperties: false
      required:
        - tag
        - parameters
        - coordinatedHeadState
        - previousRecoverableState
      properties:
        tag:
          type: string
          enum: [ "OpenState" ]
        parameters:
          $ref: "api.yaml#/components/schemas/HeadParameters"
        coordinatedHeadState:
          $ref: "#/definitions/CoordinatedHeadState"
        previousRecoverableState:
          $ref: "#/definitions/HeadState"
    - title: "ClosedState"
      additionalProperties: false
      required:
        - tag
        - parameters
        - previousRecoverableState
        - confirmedSnapshot
      properties:
        tag:
          type: string
          enum: [ "ClosedState" ]
        parameters:
          $ref: "api.yaml#/components/schemas/HeadParameters"
        previousRecoverableState:
          $ref: "#/definitions/HeadState"
        confirmedSnapshot:
          $ref: "api.yaml#/components/schemas/ConfirmedSnapshot"

  CoordinatedHeadState:
    type: object
    additionalProperties: false
    required:
    - seenUTxO
    - seenTxs
    - confirmedSnapshot
    - seenSnapshot
    properties:
      seenUTxO:
        $ref: "api.yaml#/components/schemas/UTxO"
      seenTxs:
        type: array
        items:
          $ref: "api.yaml#/components/schemas/Transaction"
      confirmedSnapshot:
        $ref: "api.yaml#/components/schemas/ConfirmedSnapshot"
      seenSnapshot:
        $ref: "api.yaml#/components/schemas/SeenSnapshot"

  Event:
    description: >-
      Events (with Effects) are the atomic elements of the Hydra Head protocol
      which is basically a state-machine consuming events and producing effects.
      Events can come from different sources representing the various components
      a Head needs to interact with: Clients, other peers through the Network,
      main Chain.
    oneOf:
    - title: ClientEvent
      type: object
      additionalProperties: false
      required:
      - tag
      - clientInput
      description: >-
        An event representing some input from a client.
      properties:
        tag:
          type: string
          enum: ["ClientEvent"]
        clientInput:
          oneOf:
            - $ref: "api.yaml#/components/messages/Init/payload"
            - $ref: "api.yaml#/components/messages/Abort/payload"
            - $ref: "api.yaml#/components/messages/Commit/payload"
            - $ref: "api.yaml#/components/messages/NewTx/payload"
            - $ref: "api.yaml#/components/messages/GetUTxO/payload"
            - $ref: "api.yaml#/components/messages/Close/payload"
            - $ref: "api.yaml#/components/messages/Contest/payload"
            - $ref: "api.yaml#/components/messages/Fanout/payload"

    - title: NetworkEvent
      type: object
      additionalProperties: false
      required:
      - tag
      - message
      description: >-
        An event representing some message received from peers in the network.
      properties:
        tag:
          type: string
          enum: ["NetworkEvent"]
        message:
          $ref: "#/definitions/Message"
    - title: OnChainEvent
      type: object
      additionalProperties: false
      required:
      - tag
      - chainEvent
      description: >-
        An event representing the confirmation that some transaction part of the
        Head protocol has been confirmed on the main chain.
      properties:
        tag:
          type: string
          enum: ["OnChainEvent"]
        chainEvent:
          $ref: "#/definitions/OnChainEvent"
    - title: ShouldPostFanout
      type: object
      additionalProperties: false
      required:
      - tag
      description: >-
        An placeholder event denoting the Head should post a Fanout transaction
        to finalize the head.
      properties:
        tag:
          type: string
          enum: ["ShouldPostFanout"]
    - title: PostTxError
      type: object
      additionalProperties: false
      required:
      - tag
      - postChainTx
      - postTxError
      description: >-
        Event emitted when posting a transaction on the main chain failed.
      properties:
        tag:
          type: string
          enum: ["PostTxError"]
        postChainTx:
          $ref: "api.yaml#/components/schemas/PostChainTx"
        postTxError:
          $ref: "api.yaml#/components/schemas/PostTxError"

  Message:
    description: >-
      Messages exchanged by Hydra network peers over a broadcasting network.
    oneOf:
      - title: ReqTx
        type: object
        additionalProperties: false
        required:
        - tag
        - party
        - transaction
        description: >-
          Request to sign some transaction and add it to the confirmed Head
          ledger.
        properties:
          tag:
            type: string
            enum: ["ReqTx"]
          party:
            $ref: "api.yaml#/components/schemas/Party"
          transaction:
            $ref: "api.yaml#/components/schemas/Transaction"
      - title: ReqSn
        type: object
        additionalProperties: false
        required:
        - tag
        - party
        - snapshotNumber
        - transactions
        description: >-
          Request from the current snapshot leader to sign some snapshot, eg. a
          bunch of transactions.
        properties:
          tag:
            type: string
            enum: ["ReqSn"]
          party:
            $ref: "api.yaml#/components/schemas/Party"
          snapshotNumber:
            $ref: "api.yaml#/components/schemas/SnapshotNumber"
          transactions:
            type: array
            items:
              $ref: "api.yaml#/components/schemas/Transaction"
      - title: AckSn
        type: object
        additionalProperties: false
        required:
        - tag
        - party
        - signed
        - snapshotNumber
        description: >-
          Signature of a snapshot by a party.
        properties:
          tag:
            type: string
            enum: ["AckSn"]
          party:
            $ref: "api.yaml#/components/schemas/Party"
          snapshotNumber:
            type: integer
            minimum: 0
          signed:
            type: string
            contentEncoding: base16
            description: >-
              Signature from given party of the snapshot. The bytes representing
              the signature are hex-encoded.
      - title: Connected
        type: object
        additionalProperties: false
        required:
        - tag
        - peer
        description: >-
          Given party is known to be connected to the network.
        properties:
          tag:
            type: string
            enum: ["Connected"]
          peer:
            $ref: "api.yaml#/components/schemas/Peer"
      - title: Disconnected
        type: object
        additionalProperties: false
        required:
        - tag
        - peer
        description: >-
          Given peer is probably disconnected from the network.
        properties:
          tag:
            type: string
            enum: ["Disconnected"]
          peer:
            $ref: "api.yaml#/components/schemas/Peer"

  OnChainEvent:
    oneOf:
      - title: Observation
        type: object
        additionalProperties: false
        required:
        - tag
        - contents
        properties:
          tag:
            type: string
            enum: ["Observation"]
          contents:
            $ref: "#/definitions/OnChainTx"

      - title: Rollback
        type: object
        additionalProperties: false
        required:
        - tag
        - contents
        properties:
          tag:
            type: string
            enum: ["Rollback"]
          contents:
            type: integer
            minimum: 0

  OnChainTx:
    description: >-
      On-Chain transactions for the Head protocol. These data structures
      completely abstract away the actual structure of the transaction and only
      represent the data relevant for the protocol to make some progress.
    oneOf:
      - title: OnInitTx
        type: object
        additionalProperties: false
        required:
        - tag
        - contestationPeriod
        - parties
        description: >-
          The initial transaction of the Head, announcing various parameters and
          the parties, has been posted on-chain.
        properties:
          tag:
            type: string
            enum: ["OnInitTx"]
          contestationPeriod:
            type: number
            description: >-
              The length of the contestaion period, in seconds, represented as a
              decimal number.
          parties:
            type: array
            items:
              $ref: "api.yaml#/components/schemas/Party"
      - title: OnCommitTx
        type: object
        additionalProperties: false
        required:
        - tag
        - party
        - committed
        description: >-
          The commit transaction from a party, committing some UTxO set to the
          Head.
        properties:
          tag:
            type: string
            enum: ["OnCommitTx"]
          party:
            $ref: "api.yaml#/components/schemas/Party"
          committed:
            $ref: "api.yaml#/components/schemas/UTxO"
      - title: OnAbortTx
        type: object
        additionalProperties: false
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["OnAbortTx"]
      - title: OnCollectComTx
        type: object
        additionalProperties: false
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["OnCollectComTx"]
      - title: OnCloseTx
        type: object
        additionalProperties: false
        required:
        - tag
        - snapshotNumber
        - remainingContestationPeriod
        properties:
          tag:
            type: string
            enum: ["OnCloseTx"]
          snapshotNumber:
            type: integer
            minimum: 0
          remainingContestationPeriod:
            type: integer
            minimum: 0
      - title: OnContestTx
        type: object
        additionalProperties: false
        required:
        - tag
        - snapshotNumber
        properties:
          tag:
            type: string
            enum: ["OnContestTx"]
          snapshotNumber:
            type: integer
            minimum: 0
      - title: OnFanoutTx
        type: object
        additionalProperties: false
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["OnFanoutTx"]

  Effect:
    description: >-
      Effects are the outcome of Head protocol processing Events. Each Effect
      represents a message that needs to be sent somewhere, either to clients
      for notification purpose, to other heads, or to the chain as part of the
      protocol.
    oneOf:
    - title: ClientEffect
      type: object
      additionalProperties: false
      required:
      - tag
      - serverOutput
      description: >-
        An effect representing some output to send to the client.
      properties:
        tag:
          type: string
          enum: ["ClientEffect"]
        serverOutput:
          oneOf:
            - $ref: "api.yaml#/components/messages/Greetings/payload"
            - $ref: "api.yaml#/components/messages/PeerConnected/payload"
            - $ref: "api.yaml#/components/messages/PeerDisconnected/payload"
            - $ref: "api.yaml#/components/messages/ReadyToCommit/payload"
            - $ref: "api.yaml#/components/messages/Committed/payload"
            - $ref: "api.yaml#/components/messages/HeadIsOpen/payload"
            - $ref: "api.yaml#/components/messages/HeadIsClosed/payload"
            - $ref: "api.yaml#/components/messages/HeadIsContested/payload"
            - $ref: "api.yaml#/components/messages/ReadyToFanout/payload"
            - $ref: "api.yaml#/components/messages/HeadIsAborted/payload"
            - $ref: "api.yaml#/components/messages/HeadIsFinalized/payload"
            - $ref: "api.yaml#/components/messages/TxSeen/payload"
            - $ref: "api.yaml#/components/messages/TxValid/payload"
            - $ref: "api.yaml#/components/messages/TxInvalid/payload"
            - $ref: "api.yaml#/components/messages/SnapshotConfirmed/payload"
            - $ref: "api.yaml#/components/messages/GetUTxOResponse/payload"
            - $ref: "api.yaml#/components/messages/InvalidInput/payload"
            - $ref: "api.yaml#/components/messages/PostTxOnChainFailed/payload"
            - $ref: "api.yaml#/components/messages/CommandFailed/payload"
            - $ref: "api.yaml#/components/messages/RolledBack/payload"

    - title: NetworkEffect
      type: object
      additionalProperties: false
      required:
      - tag
      - message
      description: >-
        An effect representing some message to broadcast to other parties in the
        Head.
      properties:
        tag:
          type: string
          enum: ["NetworkEffect"]
        message:
          $ref: "#/definitions/Message"
    - title: OnChainEffect
      type: object
      additionalProperties: false
      required:
      - tag
      - onChainTx
      description: >-
        An effect representing some transaction must be posted on-chain. Note
        that incoming transactions are represented by OnChainEvent which can be
        different from outgoing transactions.
      properties:
        tag:
          type: string
          enum: ["OnChainEffect"]
        onChainTx:
          $ref: "api.yaml#/components/schemas/PostChainTx"
    - title: Delay
      type: object
      additionalProperties: false
      required:
      - tag
      - delay
      - reason
      - event
      description: >-
        A special effect requesting the given event to be delayed from
        processing for some amount of time. Delays can happen in the protocol
        because messages can be received out-of-order due to the asynchronous
        nature of the network, hence an otherwise invalid event could become
        invalid in the future.
      properties:
        tag:
          type: string
          enum: ["Delay"]
        delay:
          type: number
          minimum: 0
          description: >-
            The length of the delay, in seconds.
        reason:
          $ref: "#/definitions/WaitReason"
        event:
          $ref: "#/definitions/Event"

  WaitReason:
    oneOf:
    - title: WaitOnNotApplicableTx
      description: >-
        A transaction failed to apply, but could apply later on.
      type: object
      additionalProperties: false
      required:
      - tag
      - validationError
      properties:
        tag:
          type: string
          enum: [ "WaitOnNotApplicableTx" ]
        validationError:
          <<: { "$ref": "#/definitions/ValidationError" }
          description: >-
            Description of the cause of the validation failure.
    - title: WaitOnSnapshotNumber
      description: >-
        Current observed snapshot is not the right one, waiting for some other
        number.
      type: object
      additionalProperties: false
      required:
      - tag
      - waitingFor
      properties:
        tag:
          type: string
          enum: [ "WaitOnSnapshotNumber" ]
        waitingFor:
          <<: { "$ref": "api.yaml#/components/schemas/SnapshotNumber" }
          description: >-
            The expected number.
    - title: WaitOnSeenSnapshot
      description: >-
        No current snapshot is available, waiting for some snapshot to start.
      type: object
      additionalProperties: false
      required:
      - tag
      properties:
        tag:
          type: string
          enum: [ "WaitOnSeenSnapshot" ]
    - title: WaitOnContestationPeriod
      description: >-
        Contestation period is not over yet.
      type: object
      additionalProperties: false
      required:
      - tag
      properties:
        tag:
          type: string
          enum: [ "WaitOnContestationPeriod" ]
