---
"$id": https://raw.githubusercontent.com/input-output-hk/hydra-poc/master/hydra-node/json-schemas/
"$schema": http://json-schema.org/draft/2020-12/schema
"$comment": A synthetic description of the WebSocket API for Hydra Head nodes.
title: Hydra WebSocket API
description: >
  This schema documents the Client API of Hydra Node's Head  protocol, allowing
  clients to:

    * Perform operations on the head itself, like initialising or closing it,
    * Submit transactions once the head is open,
    * Receive notifications from the server node.

  This API takes the form of various JSON data structures that represent either inputs
  from the client or outputs from the server. It is served over a websocket connection
  and is fully asynchronous: Inputs from the client are queued for later processing on
  the server-side, and outputs can occur at any time.

type: object
additionalProperties: false

properties:
  inputs:
    type: array
    additionalItems: false
    items:
      oneOf:
      - title: Init
        type: object
        description: >
          Initialises a new Head. This command is a no-op when a Head is already open and
          the server will output an 'CommandFailed' message should this happen.
        required:
        - tag
        - contestationPeriod
        properties:
          tag:
            type: string
            enum: ["Init"]
          contestationPeriod:
            type: number

      - title: Abort
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["Abort"]

      - title: Commit
        type: object
        required:
        - tag
        - utxo
        properties:
          tag:
            type: string
            enum: ["Commit"]
          utxo:
            $ref: "common.yaml#/definitions/UTxO"

      - title: NewTx
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["NewTx"]
          transaction:
            $ref: "common.yaml#/definitions/Transaction"

      - title: GetUTxO
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["GetUTxO"]

      - title: Close
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["Close"]

      - title: Contest
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["Contest"]

  outputs:
    type: array
    additionalItems: false
    items:
      oneOf:
      - title: PeerConnected
        type: object
        required:
        - tag
        - peer
        properties:
          tag:
            type: string
            enum: ["PeerConnected"]
          peer: { "$ref": "common.yaml#/definitions/Peer" }

      - title: PeerDisconnected
        type: object
        required:
        - tag
        - peer
        properties:
          tag:
            type: string
            enum: ["PeerDisconnected"]
          peer:
            $ref: "common.yaml#/definitions/Peer"

      - title: ReadyToCommit
        type: object
        required:
        - tag
        - parties
        properties:
          tag:
            type: string
            enum: ["ReadyToCommit"]
          parties:
            type: array
            items:
              $ref: "common.yaml#/definitions/Party"

      - title: Committed
        type: object
        required:
        - tag
        - party
        - utxo
        properties:
          tag:
            type: string
            enum: ["Committed"]
          party:
            $ref: "common.yaml#/definitions/Party"
          utxo:
            $ref: "common.yaml#/definitions/UTxO"

      - title: HeadIsOpen
        type: object
        required:
        - tag
        - utxo
        properties:
          tag:
            type: string
            enum: ["HeadIsOpen"]
          utxo:
            $ref: "common.yaml#/definitions/UTxO"

      - title: HeadIsClosed
        type: object
        required:
        - tag
        - contestationDeadline
        - latestSnapshot
        properties:
          tag:
            type: string
            enum: ["HeadIsClosed"]
          contestationDeadline:
            type: string
            format: date-time
          latestSnapshot:
            $ref: "common.yaml#/definitions/Snapshot"

      - title: HeadIsAborted
        type: object
        required:
        - tag
        - utxo
        properties:
          tag:
            type: string
            enum: ["HeadIsAborted"]
          utxo:
            $ref: "common.yaml#/definitions/UTxO"

      - title: HeadIsFinalized
        type: object
        required:
        - tag
        - utxo
        properties:
          tag:
            type: string
            enum: ["HeadIsFinalized"]
          utxo:
            $ref: "common.yaml#/definitions/UTxO"

      - title: TxSeen
        type: object
        required:
        - tag
        - transaction
        properties:
          tag:
            type: string
            enum: ["TxSeen"]
          transaction:
            $ref: "common.yaml#/definitions/Transaction"

      - title: TxValid
        type: object
        required:
        - tag
        - transaction
        properties:
          tag:
            type: string
            enum: ["TxValid"]
          transaction:
            $ref: "common.yaml#/definitions/Transaction"

      - title: TxInvalid
        type: object
        required:
        - tag
        - utxo
        - transaction
        - validationError
        properties:
          tag:
            type: string
            enum: ["TxInvalid"]
          utxo:
            $ref: "common.yaml#/definitions/UTxO"
          transaction:
            $ref: "common.yaml#/definitions/Transaction"
          validationError:
            type: object
            properties:
              reason:
                type: string

      - title: SnapshotConfirmed
        type: object
        required:
        - tag
        - snapshot
        properties:
          tag:
            type: string
            enum: ["SnapshotConfirmed"]
          snapshot:
            $ref: "common.yaml#/definitions/Snapshot"

      - title: UTxO
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["UTxO"]
          utxo:
            $ref: "common.yaml#/definitions/UTxO"

      - title: CommandFailed
        type: object
        required:
        - tag
        properties:
          tag:
            type: string
            enum: ["CommandFailed"]

      - title: InvalidInput
        type: object
        required:
        - tag
        - reason
        - input
        properties:
          tag:
            type: string
            enum: ["InvalidInput"]
          reason:
            type: string
          input:
            type: string

      - title: Greetings
        description: >-
          A friendly welcome message which tells a client something about the
          node. Currently used for knowing what signing key the server uses (it
          only knows one).
        type: object
        required:
        - tag
        - me
        properties:
          tag:
            type: string
            enum: ["Greetings"]
          me:
            $ref: "common.yaml#/definitions/Party"

      - title: PostTxOnChainFailed
        description: >-
          Something wrong happened when trying to post a transaction on-chain. Provides information
          about what kind of transaction was tentatively posted, and the reason for failure.
          **TODO**: Specialise this message depending whether or not this is a transient error, eg.
          there is an action the client can do or redo.
        type: object
        additionalProperties: false
        required:
        - tag
        - postChainTx
        - postTxError
        properties:
          tag:
            type: string
            enum: ["PostTxOnChainFailed"]
          postChainTx:
            $ref: "common.yaml#/definitions/PostChainTx"
          postTxError:
            $ref: "common.yaml#/definitions/PostTxError"
